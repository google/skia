load("//bazel:skia_rules.bzl", "exports_files_legacy", "select_multi", "skia_filegroup")

licenses(["notice"])

exports_files_legacy()

skia_filegroup(
    name = "fontmgr",
    srcs = select_multi(
        {
            "//bazel/common_config_settings:uses_android_fontmgr": ["SkFontMgr_android.h"],
            "//bazel/common_config_settings:uses_custom_directory_fontmgr": ["SkFontMgr_directory.h"],
            "//bazel/common_config_settings:uses_custom_embedded_fontmgr": ["SkFontMgr_data.h"],
            "//bazel/common_config_settings:uses_custom_empty_fontmgr": ["SkFontMgr_empty.h"],
            "//bazel/common_config_settings:uses_fontconfig_fontmgr": ["SkFontMgr_fontconfig.h"],
            "//bazel/common_config_settings:uses_fci_fontmgr": [
                "SkFontConfigInterface.h",
                "SkFontMgr_FontConfigInterface.h",
            ],
            # TODO(kjlubick, bungeman) fuchsia_fontmgr, fontmgr_mac_ct, fontmgr_win
        },
    ),
)

skia_filegroup(
    name = "public_hdrs",
    srcs = [
        "SkImageGeneratorCG.h",
        "SkImageGeneratorNDK.h",
        "SkImageGeneratorWIC.h",
        ":fontmgr",
    ] + select({
        "@platforms//os:macos": ["SkCFObject.h"],
        "@platforms//os:ios": ["SkCFObject.h"],
        "//conditions:default": [],
    }) + select({
        "@platforms//os:macos": ["SkTypeface_mac.h"],
        "@platforms//os:windows": ["SkTypeface_win.h"],
        "//conditions:default": [],
    }),
    visibility = ["//include:__pkg__"],
)
