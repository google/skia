load("//bazel:skia_rules.bzl", "exports_files_legacy", "skia_filegroup")

licenses(["notice"])

exports_files_legacy(
    label_list = ["SkBitmaskEnum.h"],
    visibility = ["//tools/skui:__pkg__"],
)

# In own skia_filegroup for mapping to the //gn/sksl.gni file.
skia_filegroup(
    name = "sksl_private_hdrs",
    srcs = [
        "SkSLDefines.h",
        "SkSLIRNode.h",
        "SkSLLayout.h",
        "SkSLModifiers.h",
        "SkSLProgramElement.h",
        "SkSLProgramKind.h",
        "SkSLSampleUsage.h",
        "SkSLStatement.h",
        "SkSLString.h",
        "SkSLSymbol.h",
    ],
)

skia_filegroup(
    name = "private_hdrs",
    srcs = [
        "SkBitmaskEnum.h",
        "SkChecksum.h",
        "SkColorData.h",
        "SkEncodedInfo.h",
        "SkGainmapInfo.h",
        "SkGainmapShader.h",
        "SkIDChangeListener.h",
        "SkOpts_spi.h",
        "SkPathRef.h",
        "SkShadowFlags.h",
        "SkSpinlock.h",
        "SkWeakRefCnt.h",
        ":sksl_private_hdrs",
        "//include/private/chromium:private_hdrs",
        "//include/private/base:private_hdrs",
    ] + select({
        "//src/gpu:has_gpu_backend": [
            "//include/private/gpu:private_hdrs",
        ],
        "//conditions:default": [],
    }),
    visibility = ["//include:__pkg__"],
)

skia_filegroup(
    name = "buffet_hdrs",
    srcs = [
        # Files listed here will be available to Skia internals via the core_priv target.
        "SkColorData.h",
        "SkIDChangeListener.h",
    ],
    visibility = ["//src:__pkg__"],
)

skia_filegroup(
    name = "buffet_srcs",
    srcs = [
        # We really don't want this header to be used outside of SkPath and SkPathBuilder
        # so we add it to core under srcs instead to enforce that.
        "SkPathRef.h",
    ],
    visibility = ["//src:__pkg__"],
)
