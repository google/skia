# Copyright 2020 Google LLC
#
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# Things are easiest for everyone if these source paths are absolute.
_tests = get_path_info("../tests", "abspath")

sksl_fp_error_tests = [
  "$_tests/sksl/errors/GrBadIn.fp",
  "$_tests/sksl/errors/GrMainParameterWrongType.fp",
  "$_tests/sksl/errors/GrMainTooManyParameters.fp",
  "$_tests/sksl/errors/GrNoFragmentProcessorConstruction.fp",
  "$_tests/sksl/errors/GrNoFragmentProcessorExpressions.fp",
  "$_tests/sksl/errors/GrNoFragmentProcessorLocals.fp",
  "$_tests/sksl/errors/GrNoFragmentProcessorParams.fp",
  "$_tests/sksl/errors/GrNoFragmentProcessorReturn.fp",
  "$_tests/sksl/errors/GrRecursion.fp",
]

sksl_fp_tests = [
  "$_tests/sksl/fp/GrChildProcessorAndGlobal.fp",
  "$_tests/sksl/fp/GrChildProcessorFieldAccess.fp",
  "$_tests/sksl/fp/GrChildProcessorInlineFieldAccess.fp",
  "$_tests/sksl/fp/GrChildProcessorSampleCoords.fp",
  "$_tests/sksl/fp/GrChildProcessorSampleMatrixAndCoords.fp",
  "$_tests/sksl/fp/GrChildProcessorSampleMatrixConstant.fp",
  "$_tests/sksl/fp/GrChildProcessorSampleMatrixConstantAndCoords.fp",
  "$_tests/sksl/fp/GrChildProcessorSampleMatrixMultipleUniforms.fp",
  "$_tests/sksl/fp/GrChildProcessorSampleMatrixSingleInUniform.fp",
  "$_tests/sksl/fp/GrChildProcessorSampleMatrixSingleUniform.fp",
  "$_tests/sksl/fp/GrChildProcessorSampleMatrixSingleUniformExpr.fp",
  "$_tests/sksl/fp/GrChildProcessorWithInputExpression.fp",
  "$_tests/sksl/fp/GrChildProcessors.fp",
  "$_tests/sksl/fp/GrChildProcessorsWithInput.fp",
  "$_tests/sksl/fp/GrConditionalInUniform.fp",
  "$_tests/sksl/fp/GrFunction.fp",
  "$_tests/sksl/fp/GrGrSLTypesAreSupported.fp",
  "$_tests/sksl/fp/GrHelloWorld.fp",
  "$_tests/sksl/fp/GrInUniform.fp",
  "$_tests/sksl/fp/GrInUniformCType.fp",
  "$_tests/sksl/fp/GrInlinedFunction.fp",
  "$_tests/sksl/fp/GrKeyIn.fp",
  "$_tests/sksl/fp/GrLayoutWhen.fp",
  "$_tests/sksl/fp/GrMainCoords.fp",
  "$_tests/sksl/fp/GrModuloOp.fp",
  "$_tests/sksl/fp/GrNestedCall.fp",
  "$_tests/sksl/fp/GrNestedChildProcessors.fp",
  "$_tests/sksl/fp/GrNonInlinedInUniform.fp",
  "$_tests/sksl/fp/GrSectionClass.fp",
  "$_tests/sksl/fp/GrSectionConstructor.fp",
  "$_tests/sksl/fp/GrSectionConstructorParams.fp",
  "$_tests/sksl/fp/GrSectionCpp.fp",
  "$_tests/sksl/fp/GrSectionDumpInfo.fp",
  "$_tests/sksl/fp/GrSectionEmitCode.fp",
  "$_tests/sksl/fp/GrSectionFields.fp",
  "$_tests/sksl/fp/GrSectionHeader.fp",
  "$_tests/sksl/fp/GrSectionInitializers.fp",
  "$_tests/sksl/fp/GrSectionMake.fp",
  "$_tests/sksl/fp/GrSectionSetData.fp",
  "$_tests/sksl/fp/GrSectionTest.fp",
  "$_tests/sksl/fp/GrTrackedInUniform.fp",
  "$_tests/sksl/fp/GrUniform.fp",
  "$_tests/sksl/fp/GrUniformArrays.fp",
  "$_tests/sksl/fp/GrUseExplicitReturn.fp",
]

sksl_error_tests = [
  "$_tests/sksl/errors/ArgumentCountMismatch.sksl",
  "$_tests/sksl/errors/ArgumentMismatch.sksl",
  "$_tests/sksl/errors/ArgumentModifiers.sksl",
  "$_tests/sksl/errors/ArrayIndexOutOfRange.sksl",
  "$_tests/sksl/errors/ArrayReturnTypes.sksl",
  "$_tests/sksl/errors/ArrayTooManyDimensions.sksl",
  "$_tests/sksl/errors/ArrayUnspecifiedDimensions.sksl",
  "$_tests/sksl/errors/AssignmentTypeMismatch.sksl",
  "$_tests/sksl/errors/BadCaps.sksl",
  "$_tests/sksl/errors/BadFieldAccess.sksl",
  "$_tests/sksl/errors/BadIndex.sksl",
  "$_tests/sksl/errors/BadModifiers.sksl",
  "$_tests/sksl/errors/BinaryInvalidType.sksl",
  "$_tests/sksl/errors/BinaryTypeCoercion.sksl",
  "$_tests/sksl/errors/BinaryTypeMismatch.sksl",
  "$_tests/sksl/errors/BitShiftFloat.sksl",
  "$_tests/sksl/errors/BitShiftFloatMatrix.sksl",
  "$_tests/sksl/errors/BitShiftFloatVector.sksl",
  "$_tests/sksl/errors/BooleanArithmetic.sksl",
  "$_tests/sksl/errors/BreakOutsideLoop.sksl",
  "$_tests/sksl/errors/CallNonFunction.sksl",
  "$_tests/sksl/errors/CanExitWithoutReturningValue.sksl",
  "$_tests/sksl/errors/ConstructorArgumentCount.sksl",
  "$_tests/sksl/errors/ConstructorTypeMismatch.sksl",
  "$_tests/sksl/errors/ContinueOutsideLoop.sksl",
  "$_tests/sksl/errors/DivideByZero.sksl",
  "$_tests/sksl/errors/DoTypeMismatch.sksl",
  "$_tests/sksl/errors/DuplicateFunction.sksl",
  "$_tests/sksl/errors/DuplicateOutput.sksl",
  "$_tests/sksl/errors/DuplicateSymbol.sksl",
  "$_tests/sksl/errors/EnumValueMustBeConstInt.sksl",
  "$_tests/sksl/errors/ErrorsInDeadCode.sksl",
  "$_tests/sksl/errors/FloatRemainder.sksl",
  "$_tests/sksl/errors/ForTypeMismatch.sksl",
  "$_tests/sksl/errors/GenericArgumentMismatch.sksl",
  "$_tests/sksl/errors/IfTypeMismatch.sksl",
  "$_tests/sksl/errors/InVarWithInitializerExpression.sksl",
  "$_tests/sksl/errors/InterfaceBlockScope.sksl",
  "$_tests/sksl/errors/InterfaceBlockStorageModifiers.sksl",
  "$_tests/sksl/errors/InterfaceBlockWithNoMembers.sksl",
  "$_tests/sksl/errors/InvalidAssignment.sksl",
  "$_tests/sksl/errors/InvalidOutParams.sksl",
  "$_tests/sksl/errors/InvalidToken.sksl",
  "$_tests/sksl/errors/InvalidUnary.sksl",
  "$_tests/sksl/errors/MismatchedNumbers.sksl",
  "$_tests/sksl/errors/ModifiersInStruct.sksl",
  "$_tests/sksl/errors/OpaqueTypeAssignment.sksl",
  "$_tests/sksl/errors/OpaqueTypeConstruction.sksl",
  "$_tests/sksl/errors/OpaqueTypeInArray.sksl",
  "$_tests/sksl/errors/OpaqueTypeInInterfaceBlock.sksl",
  "$_tests/sksl/errors/OpaqueTypeInStruct.sksl",
  "$_tests/sksl/errors/OpenArray.sksl",
  "$_tests/sksl/errors/Ossfuzz26700.sksl",
  "$_tests/sksl/errors/Ossfuzz26759.sksl",
  "$_tests/sksl/errors/Ossfuzz27650.sksl",
  "$_tests/sksl/errors/Ossfuzz27663.sksl",
  "$_tests/sksl/errors/Ossfuzz29085.sksl",
  "$_tests/sksl/errors/OverflowFloatLiteral.sksl",
  "$_tests/sksl/errors/OverflowIntLiteral.sksl",
  "$_tests/sksl/errors/OverflowParamArraySize.sksl",
  "$_tests/sksl/errors/OverflowUintLiteral.sksl",
  "$_tests/sksl/errors/PrivateTypes.sksl",
  "$_tests/sksl/errors/RedeclareBasicType.sksl",
  "$_tests/sksl/errors/RedeclareEnum.sksl",
  "$_tests/sksl/errors/RedeclareSamplerType.sksl",
  "$_tests/sksl/errors/RedeclareStruct.sksl",
  "$_tests/sksl/errors/RedeclareStructTypeWithName.sksl",
  "$_tests/sksl/errors/RedeclareUserType.sksl",
  "$_tests/sksl/errors/RedeclareVariable.sksl",
  "$_tests/sksl/errors/ReturnDifferentType.sksl",
  "$_tests/sksl/errors/ReturnFromVoid.sksl",
  "$_tests/sksl/errors/ReturnMissingValue.sksl",
  "$_tests/sksl/errors/ReturnTypeMismatch.sksl",
  "$_tests/sksl/errors/SelfReferentialInitializerExpression.sksl",
  "$_tests/sksl/errors/SpuriousFloat.sksl",
  "$_tests/sksl/errors/StaticIfTest.sksl",
  "$_tests/sksl/errors/StaticSwitchConditionalBreak.sksl",
  "$_tests/sksl/errors/StaticSwitchTest.sksl",
  "$_tests/sksl/errors/StructTooDeeplyNested.sksl",
  "$_tests/sksl/errors/SwitchDuplicateCase.sksl",
  "$_tests/sksl/errors/SwitchTypes.sksl",
  "$_tests/sksl/errors/SwizzleConstantOutput.sksl",
  "$_tests/sksl/errors/SwizzleMatrix.sksl",
  "$_tests/sksl/errors/SwizzleOnlyLiterals.sksl",
  "$_tests/sksl/errors/SwizzleOutOfBounds.sksl",
  "$_tests/sksl/errors/SwizzleTooManyComponents.sksl",
  "$_tests/sksl/errors/TernaryMismatch.sksl",
  "$_tests/sksl/errors/UndeclaredFunction.sksl",
  "$_tests/sksl/errors/UndefinedFunction.sksl",
  "$_tests/sksl/errors/UndefinedSymbol.sksl",
  "$_tests/sksl/errors/Unreachable.sksl",
  "$_tests/sksl/errors/UnsupportedGLSLIdentifiers.sksl",
  "$_tests/sksl/errors/UseWithoutInitializeArrayIndex.sksl",
  "$_tests/sksl/errors/UseWithoutInitializeBinaryExpr.sksl",
  "$_tests/sksl/errors/UseWithoutInitializeDeadIf.sksl",
  "$_tests/sksl/errors/UseWithoutInitializeDeadSwitch.sksl",
  "$_tests/sksl/errors/UseWithoutInitializeReturnValue.sksl",
  "$_tests/sksl/errors/UseWithoutInitializeVarDecl.sksl",
  "$_tests/sksl/errors/UsingInvalidValue.sksl",
  "$_tests/sksl/errors/WhileTypeMismatch.sksl",
]

sksl_glsl_tests = [
  "$_tests/sksl/glsl/ForceHighPrecision.sksl",
  "$_tests/sksl/glsl/IncompleteShortIntPrecision.sksl",
  "$_tests/sksl/glsl/LayoutQualifiers.sksl",
  "$_tests/sksl/glsl/ShortIntPrecision.sksl",
  "$_tests/sksl/glsl/TextureSharpenVersion110.sksl",
  "$_tests/sksl/glsl/TextureVersion110.sksl",
  "$_tests/sksl/glsl/UsesPrecisionModifiers.sksl",
  "$_tests/sksl/glsl/Version110.sksl",
  "$_tests/sksl/glsl/Version450Core.sksl",
]

sksl_metal_tests = [
  "$_tests/sksl/metal/CastHalf4ToMat2x2.sksl",
  "$_tests/sksl/metal/CastMat2x2ToMat3x3.sksl",
  "$_tests/sksl/metal/CastMat2x3ToMat4x4.sksl",
  "$_tests/sksl/metal/CastMat4x4ToMat3x4.sksl",
  "$_tests/sksl/metal/CastMat4x4ToMat4x3.sksl",
  "$_tests/sksl/metal/InterfaceBlocksRequireBinding.sksl",
  "$_tests/sksl/metal/NumericGlobals.sksl",
  "$_tests/sksl/metal/OpaqueTypeInInterfaceBlock.sksl",
  "$_tests/sksl/metal/OpaqueTypeInStruct.sksl",
  "$_tests/sksl/metal/OutParams.sksl",
  "$_tests/sksl/metal/OutVarsRequireLocation.sksl",
  "$_tests/sksl/metal/SamplerGlobals.sksl",
  "$_tests/sksl/metal/SwizzleHelper.sksl",
]

sksl_spirv_tests = [
  "$_tests/sksl/spirv/ConstantVectorFromVector.sksl",
  "$_tests/sksl/spirv/LayoutMultipleOf4.sksl",
  "$_tests/sksl/spirv/LayoutOutOfOrder.sksl",
  "$_tests/sksl/spirv/OpaqueTypeInArray.sksl",
  "$_tests/sksl/errors/UndefinedFunction.sksl",
]

sksl_shared_tests = [
  "$_tests/sksl/intrinsics/Abs.sksl",
  "$_tests/sksl/intrinsics/Acos.sksl",
  "$_tests/sksl/intrinsics/Acosh.sksl",
  "$_tests/sksl/intrinsics/All.sksl",
  "$_tests/sksl/intrinsics/Any.sksl",
  "$_tests/sksl/intrinsics/Asin.sksl",
  "$_tests/sksl/intrinsics/Asinh.sksl",
  "$_tests/sksl/intrinsics/Atan.sksl",
  "$_tests/sksl/intrinsics/Atanh.sksl",
  "$_tests/sksl/intrinsics/BitCount.sksl",
  "$_tests/sksl/intrinsics/Ceil.sksl",
  "$_tests/sksl/intrinsics/Clamp.sksl",
  "$_tests/sksl/intrinsics/Cos.sksl",
  "$_tests/sksl/intrinsics/Cosh.sksl",
  "$_tests/sksl/intrinsics/Cross.sksl",
  "$_tests/sksl/intrinsics/Degrees.sksl",
  "$_tests/sksl/intrinsics/Determinant.sksl",
  "$_tests/sksl/intrinsics/DFdx.sksl",
  "$_tests/sksl/intrinsics/DFdy.sksl",
  "$_tests/sksl/intrinsics/Distance.sksl",
  "$_tests/sksl/intrinsics/Dot.sksl",
  "$_tests/sksl/intrinsics/Equal.sksl",
  "$_tests/sksl/intrinsics/Exp.sksl",
  "$_tests/sksl/intrinsics/Exp2.sksl",
  "$_tests/sksl/intrinsics/FaceForward.sksl",
  "$_tests/sksl/intrinsics/FindLSB.sksl",
  "$_tests/sksl/intrinsics/FindMSB.sksl",
  "$_tests/sksl/intrinsics/FloatBitsToInt.sksl",
  "$_tests/sksl/intrinsics/FloatBitsToUint.sksl",
  "$_tests/sksl/intrinsics/Floor.sksl",
  "$_tests/sksl/intrinsics/Fma.sksl",
  "$_tests/sksl/intrinsics/Fract.sksl",
  "$_tests/sksl/intrinsics/Frexp.sksl",
  "$_tests/sksl/intrinsics/Fwidth.sksl",
  "$_tests/sksl/intrinsics/GreaterThan.sksl",
  "$_tests/sksl/intrinsics/GreaterThanEqual.sksl",
  "$_tests/sksl/intrinsics/IntBitsToFloat.sksl",
  "$_tests/sksl/intrinsics/Inverse.sksl",
  "$_tests/sksl/intrinsics/Inversesqrt.sksl",
  "$_tests/sksl/intrinsics/IsInf.sksl",
  "$_tests/sksl/intrinsics/IsNan.sksl",
  "$_tests/sksl/intrinsics/Ldexp.sksl",
  "$_tests/sksl/intrinsics/Length.sksl",
  "$_tests/sksl/intrinsics/LessThan.sksl",
  "$_tests/sksl/intrinsics/LessThanEqual.sksl",
  "$_tests/sksl/intrinsics/Log.sksl",
  "$_tests/sksl/intrinsics/Log2.sksl",
  "$_tests/sksl/intrinsics/MatrixCompMult.sksl",
  "$_tests/sksl/intrinsics/Max.sksl",
  "$_tests/sksl/intrinsics/Min.sksl",
  "$_tests/sksl/intrinsics/Mix.sksl",
  "$_tests/sksl/intrinsics/Mod.sksl",
  "$_tests/sksl/intrinsics/Modf.sksl",
  "$_tests/sksl/intrinsics/Normalize.sksl",
  "$_tests/sksl/intrinsics/Not.sksl",
  "$_tests/sksl/intrinsics/NotEqual.sksl",
  "$_tests/sksl/intrinsics/OuterProduct.sksl",
  "$_tests/sksl/intrinsics/Pack.sksl",
  "$_tests/sksl/intrinsics/Pow.sksl",
  "$_tests/sksl/intrinsics/Radians.sksl",
  "$_tests/sksl/intrinsics/Reflect.sksl",
  "$_tests/sksl/intrinsics/Refract.sksl",
  "$_tests/sksl/intrinsics/Round.sksl",
  "$_tests/sksl/intrinsics/RoundEven.sksl",
  "$_tests/sksl/intrinsics/Saturate.sksl",
  "$_tests/sksl/intrinsics/Sign.sksl",
  "$_tests/sksl/intrinsics/Sin.sksl",
  "$_tests/sksl/intrinsics/Sinh.sksl",
  "$_tests/sksl/intrinsics/Smoothstep.sksl",
  "$_tests/sksl/intrinsics/Sqrt.sksl",
  "$_tests/sksl/intrinsics/Step.sksl",
  "$_tests/sksl/intrinsics/Tan.sksl",
  "$_tests/sksl/intrinsics/Tanh.sksl",
  "$_tests/sksl/intrinsics/Transpose.sksl",
  "$_tests/sksl/intrinsics/Trunc.sksl",
  "$_tests/sksl/intrinsics/UintBitsToFloat.sksl",
  "$_tests/sksl/intrinsics/Unpack.sksl",
  "$_tests/sksl/shared/ArrayConstructors.sksl",
  "$_tests/sksl/shared/ArrayIndexTypes.sksl",
  "$_tests/sksl/shared/ArrayTypes.sksl",
  "$_tests/sksl/shared/Assignment.sksl",
  "$_tests/sksl/shared/Caps.sksl",
  "$_tests/sksl/shared/CastsRoundTowardZero.sksl",
  "$_tests/sksl/shared/Clockwise.sksl",
  "$_tests/sksl/shared/ComplexDelete.sksl",
  "$_tests/sksl/shared/ConstArray.sksl",
  "$_tests/sksl/shared/ConstVariableComparison.sksl",
  "$_tests/sksl/shared/ConstantIf.sksl",
  "$_tests/sksl/shared/Control.sksl",
  "$_tests/sksl/shared/DeadDoWhileLoop.sksl",
  "$_tests/sksl/shared/DeadIfStatement.sksl",
  "$_tests/sksl/shared/DeadLoopVariable.sksl",
  "$_tests/sksl/shared/DeadStripFunctions.sksl",
  "$_tests/sksl/shared/DependentInitializers.sksl",
  "$_tests/sksl/shared/DerivativesUnused.sksl",
  "$_tests/sksl/shared/Discard.sksl",
  "$_tests/sksl/shared/Enum.sksl",
  "$_tests/sksl/shared/FragCoordsFlipY.sksl",
  "$_tests/sksl/shared/FragCoordsNew.sksl",
  "$_tests/sksl/shared/FragCoordsOld.sksl",
  "$_tests/sksl/shared/FunctionArgumentMatch.sksl",
  "$_tests/sksl/shared/FunctionPrototype.sksl",
  "$_tests/sksl/shared/Functions.sksl",
  "$_tests/sksl/shared/GaussianBlur.sksl",
  "$_tests/sksl/shared/GeometricIntrinsics.sksl",
  "$_tests/sksl/shared/Geometry.geom",
  "$_tests/sksl/shared/GeometryExtension.geom",
  "$_tests/sksl/shared/GeometryGSInvocations.geom",
  "$_tests/sksl/shared/GeometryNoGSInvocations.geom",
  "$_tests/sksl/shared/GeometryNoGSInvocationsReorder.geom",
  "$_tests/sksl/shared/Height.sksl",
  "$_tests/sksl/shared/HelloWorld.sksl",
  "$_tests/sksl/shared/Hex.sksl",
  "$_tests/sksl/shared/InstanceID.vert",
  "$_tests/sksl/shared/InterfaceBlockAnonymous.sksl",
  "$_tests/sksl/shared/InterfaceBlockArray.sksl",
  "$_tests/sksl/shared/InterfaceBlockNamed.sksl",
  "$_tests/sksl/shared/MatricesFloat.sksl",
  "$_tests/sksl/shared/MatricesHalf.sksl",
  "$_tests/sksl/shared/MixedTypeCommaOperator.sksl",
  "$_tests/sksl/shared/MultipleAssignments.sksl",
  "$_tests/sksl/shared/NegatedVectorLiteral.sksl",
  "$_tests/sksl/shared/NoFragCoordsPos.vert",
  "$_tests/sksl/shared/NoFragCoordsPosRT.vert",
  "$_tests/sksl/shared/NormalizationGeo.geom",
  "$_tests/sksl/shared/NormalizationVert.vert",
  "$_tests/sksl/shared/NumberCasts.sksl",
  "$_tests/sksl/shared/NumberConversions.sksl",
  "$_tests/sksl/shared/Offset.sksl",
  "$_tests/sksl/shared/Operators.sksl",
  "$_tests/sksl/shared/Ossfuzz26167.sksl",
  "$_tests/sksl/shared/Ossfuzz27614.sksl",
  "$_tests/sksl/shared/Ossfuzz28050.sksl",
  "$_tests/sksl/shared/Ossfuzz28794.sksl",
  "$_tests/sksl/shared/Ossfuzz28904.sksl",
  "$_tests/sksl/shared/Ossfuzz29444.sksl",
  "$_tests/sksl/shared/OutParams.sksl",
  "$_tests/sksl/shared/OutParamsTricky.sksl",
  "$_tests/sksl/shared/RectangleTexture.sksl",
  "$_tests/sksl/shared/ResizeMatrix.sksl",
  "$_tests/sksl/shared/SampleLocations.vert",
  "$_tests/sksl/shared/SampleMask.sksl",
  "$_tests/sksl/shared/ScalarConversionConstructors.sksl",
  "$_tests/sksl/shared/ScopedSymbol.sksl",
  "$_tests/sksl/shared/StackingVectorCasts.sksl",
  "$_tests/sksl/shared/StaticIf.sksl",
  "$_tests/sksl/shared/StaticSwitch.sksl",
  "$_tests/sksl/shared/StaticSwitchWithBreak.sksl",
  "$_tests/sksl/shared/StaticSwitchWithBreakInsideBlock.sksl",
  "$_tests/sksl/shared/StaticSwitchWithConditionalBreak.sksl",
  "$_tests/sksl/shared/StaticSwitchWithConditionalBreakInsideBlock.sksl",
  "$_tests/sksl/shared/StaticSwitchWithFallthroughA.sksl",
  "$_tests/sksl/shared/StaticSwitchWithFallthroughB.sksl",
  "$_tests/sksl/shared/StaticSwitchWithStaticConditionalBreak.sksl",
  "$_tests/sksl/shared/StaticSwitchWithStaticConditionalBreakInsideBlock.sksl",
  "$_tests/sksl/shared/Structs.sksl",
  "$_tests/sksl/shared/StructMaxDepth.sksl",
  "$_tests/sksl/shared/Switch.sksl",
  "$_tests/sksl/shared/SwitchContainingDeadCode.sksl",
  "$_tests/sksl/shared/SwitchWithFallthrough.sksl",
  "$_tests/sksl/shared/SwizzleBoolConstants.sksl",
  "$_tests/sksl/shared/SwizzleByIndex.sksl",
  "$_tests/sksl/shared/SwizzleConstants.sksl",
  "$_tests/sksl/shared/SwizzleLTRB.sksl",
  "$_tests/sksl/shared/SwizzleOpt.sksl",
  "$_tests/sksl/shared/SwizzleScalar.sksl",
  "$_tests/sksl/shared/TernaryAsLValueEntirelyFoldable.sksl",
  "$_tests/sksl/shared/TernaryAsLValueFoldableTest.sksl",
  "$_tests/sksl/shared/Texture1D.sksl",
  "$_tests/sksl/shared/Texture2D.sksl",
  "$_tests/sksl/shared/TextureSharpen.sksl",
  "$_tests/sksl/shared/UnaryPositiveNegative.sksl",
  "$_tests/sksl/shared/UniformArray.sksl",
  "$_tests/sksl/shared/UnusedVariables.sksl",
  "$_tests/sksl/shared/VectorConstructors.sksl",
  "$_tests/sksl/shared/VertexEarlyReturn.vert",
  "$_tests/sksl/shared/VertexID.vert",
  "$_tests/sksl/shared/Width.sksl",
]

sksl_folding_tests = [
  "$_tests/sksl/folding/BoolFolding.sksl",
  "$_tests/sksl/folding/FloatFolding.sksl",
  "$_tests/sksl/folding/IntFolding.sksl",
  "$_tests/sksl/folding/MatrixFolding.sksl",
  "$_tests/sksl/folding/ShortCircuitBoolFolding.sksl",
  "$_tests/sksl/folding/VectorScalarFolding.sksl",
  "$_tests/sksl/folding/VectorVectorFolding.sksl",
]

sksl_inliner_tests = [
  "$_tests/sksl/inliner/DoWhileBodyMustBeInlinedIntoAScope.sksl",
  "$_tests/sksl/inliner/DoWhileTestCannotBeInlined.sksl",
  "$_tests/sksl/inliner/EnumsCanBeInlinedSafely.sksl",
  "$_tests/sksl/inliner/ForBodyMustBeInlinedIntoAScope.sksl",
  "$_tests/sksl/inliner/ForInitializerExpressionsCanBeInlined.sksl",
  "$_tests/sksl/inliner/ForWithReturnInsideCannotBeInlined.sksl",
  "$_tests/sksl/inliner/ForWithoutReturnInsideCanBeInlined.sksl",
  "$_tests/sksl/inliner/IfBodyMustBeInlinedIntoAScope.sksl",
  "$_tests/sksl/inliner/IfElseBodyMustBeInlinedIntoAScope.sksl",
  "$_tests/sksl/inliner/IfElseChainWithReturnsCanBeInlined.sksl",
  "$_tests/sksl/inliner/IfTestCanBeInlined.sksl",
  "$_tests/sksl/inliner/IfWithReturnsCanBeInlined.sksl",
  "$_tests/sksl/inliner/InlineKeywordOverridesThreshold.sksl",
  "$_tests/sksl/inliner/InlineThreshold.sksl",
  "$_tests/sksl/inliner/InlinerElidesTempVarForReturnsInsideBlock.sksl",
  "$_tests/sksl/inliner/InlinerUsesTempVarForMultipleReturns.sksl",
  "$_tests/sksl/inliner/InlinerUsesTempVarForReturnsInsideBlockWithVar.sksl",
  "$_tests/sksl/inliner/InlineWithInoutArgument.sksl",
  "$_tests/sksl/inliner/InlineWithModifiedArgument.sksl",
  "$_tests/sksl/inliner/InlineWithNestedBigCalls.sksl",
  "$_tests/sksl/inliner/InlineWithNestedCalls.sksl",
  "$_tests/sksl/inliner/InlineWithUnmodifiedArgument.sksl",
  "$_tests/sksl/inliner/InlineWithUnnecessaryBlocks.sksl",
  "$_tests/sksl/inliner/InlinerAvoidsVariableNameOverlap.sksl",
  "$_tests/sksl/inliner/InlinerManglesNames.sksl",
  "$_tests/sksl/inliner/InlinerWrapsEarlyReturnsWithForLoop.sksl",
  "$_tests/sksl/inliner/InlinerWrapsSwitchWithReturnInsideWithForLoop.sksl",
  "$_tests/sksl/inliner/ShortCircuitEvaluationsCannotInlineRightHandSide.sksl",
  "$_tests/sksl/inliner/StructsCanBeInlinedSafely.sksl",
  "$_tests/sksl/inliner/SwitchWithCastCanBeInlined.sksl",
  "$_tests/sksl/inliner/SwitchWithoutReturnInsideCanBeInlined.sksl",
  "$_tests/sksl/inliner/SwizzleCanBeInlinedDirectly.sksl",
  "$_tests/sksl/inliner/TernaryResultsCannotBeInlined.sksl",
  "$_tests/sksl/inliner/TernaryTestCanBeInlined.sksl",
  "$_tests/sksl/inliner/TrivialArgumentsInlineDirectly.sksl",
  "$_tests/sksl/inliner/WhileBodyMustBeInlinedIntoAScope.sksl",
  "$_tests/sksl/inliner/WhileTestCannotBeInlined.sksl",
]

sksl_blend_tests = [
  "$_tests/sksl/blend/BlendClear.sksl",
  "$_tests/sksl/blend/BlendColor.sksl",
  "$_tests/sksl/blend/BlendColorBurn.sksl",
  "$_tests/sksl/blend/BlendColorDodge.sksl",
  "$_tests/sksl/blend/BlendDarken.sksl",
  "$_tests/sksl/blend/BlendDifference.sksl",
  "$_tests/sksl/blend/BlendDst.sksl",
  "$_tests/sksl/blend/BlendDstAtop.sksl",
  "$_tests/sksl/blend/BlendDstIn.sksl",
  "$_tests/sksl/blend/BlendDstOut.sksl",
  "$_tests/sksl/blend/BlendDstOver.sksl",
  "$_tests/sksl/blend/BlendEnum.sksl",
  "$_tests/sksl/blend/BlendExclusion.sksl",
  "$_tests/sksl/blend/BlendHardLight.sksl",
  "$_tests/sksl/blend/BlendHue.sksl",
  "$_tests/sksl/blend/BlendLighten.sksl",
  "$_tests/sksl/blend/BlendLuminosity.sksl",
  "$_tests/sksl/blend/BlendModulate.sksl",
  "$_tests/sksl/blend/BlendMultiply.sksl",
  "$_tests/sksl/blend/BlendOverlay.sksl",
  "$_tests/sksl/blend/BlendPlus.sksl",
  "$_tests/sksl/blend/BlendSaturation.sksl",
  "$_tests/sksl/blend/BlendScreen.sksl",
  "$_tests/sksl/blend/BlendSoftLight.sksl",
  "$_tests/sksl/blend/BlendSrc.sksl",
  "$_tests/sksl/blend/BlendSrcAtop.sksl",
  "$_tests/sksl/blend/BlendSrcIn.sksl",
  "$_tests/sksl/blend/BlendSrcOut.sksl",
  "$_tests/sksl/blend/BlendSrcOver.sksl",
  "$_tests/sksl/blend/BlendXor.sksl",
]

sksl_settings_tests = [
  "$_tests/sksl/glsl/TypePrecision.sksl",
  "$_tests/sksl/inliner/ExponentialGrowth.sksl",
  "$_tests/sksl/inliner/InlinerCanBeDisabled.sksl",
  "$_tests/sksl/shared/Derivatives.sksl",
  "$_tests/sksl/shared/DerivativesFlipY.sksl",
  "$_tests/sksl/workarounds/AbsInt.sksl",
  "$_tests/sksl/workarounds/BlendGuardedDivide.sksl",
  "$_tests/sksl/workarounds/BlendModesAllZeroVec.sksl",
  "$_tests/sksl/workarounds/FractNegative.sksl",
  "$_tests/sksl/workarounds/FragCoords.sksl",
  "$_tests/sksl/workarounds/LoopCondition.sksl",
  "$_tests/sksl/workarounds/MinAndAbsTogether.sksl",
  "$_tests/sksl/workarounds/NegatedAtan.sksl",
  "$_tests/sksl/workarounds/PowWithConstantExponent.sksl",
  "$_tests/sksl/workarounds/RewriteDoWhileLoops.sksl",
  "$_tests/sksl/workarounds/TernaryShortCircuit.sksl",
]

sksl_rte_tests = [
  "$_tests/sksl/runtime/ConversionConstructors.rte",
  "$_tests/sksl/runtime/LoopInt.rte",
  "$_tests/sksl/runtime/LoopFloat.rte",
  "$_tests/sksl/runtime/SampleWithConstantMatrix.rte",
  "$_tests/sksl/runtime/SampleWithExplicitCoord.rte",
  "$_tests/sksl/runtime/SampleWithUniformMatrix.rte",
  "$_tests/sksl/runtime/SampleWithVariableMatrix.rte",
]

sksl_rte_error_tests = [
  "$_tests/sksl/runtime_errors/IllegalIndexing.rte",
  "$_tests/sksl/runtime_errors/IllegalOperators.rte",
  "$_tests/sksl/runtime_errors/IllegalStatements.rte",
  "$_tests/sksl/runtime_errors/LoopConditionErrors.rte",
  "$_tests/sksl/runtime_errors/LoopExpressionErrors.rte",
  "$_tests/sksl/runtime_errors/LoopInitializerErrors.rte",
  "$_tests/sksl/runtime_errors/LoopStructureErrors.rte",
  "$_tests/sksl/runtime_errors/UnsupportedTypeSampler.rte",
  "$_tests/sksl/runtime_errors/UnsupportedTypeTexture.rte",
]

# Tests in sksl_fp_tests_sources will be compiled with --settings on, and are expected to generate
# a .cpp and a .h output file.
sksl_fp_tests_sources = sksl_fp_error_tests + sksl_fp_tests

# Tests in sksl_glsl_tests_sources will be compiled with --settings on, and are expected to generate
# a .glsl output file.
sksl_glsl_tests_sources =
    sksl_error_tests + sksl_glsl_tests + sksl_inliner_tests +
    sksl_folding_tests + sksl_shared_tests

# Tests in sksl_glsl_settings_tests_sources will be compiled twice, once with --settings and once
# using --nosettings. In the latter mode, StandaloneSettings is appended to the output filename.
sksl_glsl_settings_tests_sources = sksl_blend_tests + sksl_settings_tests

# Tests in sksl_metal_tests_sources will be compiled with --settings on, and are expected to
# generate a .metal output file.
sksl_metal_tests_sources =
    sksl_metal_tests + sksl_blend_tests + sksl_shared_tests

# Tests in sksl_spirv_tests_sources will be compiled with --settings on, and are expected to
# generate a .asm.(frag|vert|geom) output file.
sksl_spirv_tests_sources =
    sksl_blend_tests + sksl_shared_tests + sksl_spirv_tests

## Tests in sksl_skvm_tests_sources will be compiled with --settings on, and are expected to
## generate a .skvm output file.
sksl_skvm_tests_sources = sksl_rte_tests + sksl_rte_error_tests
