    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  constVal(0) = 0xBFA00000 (-1.25)
    4. zero_slot_unmasked             constVal(1) = 0
    5. copy_constant                  constVal(2) = 0x3F400000 (0.75)
    6. copy_constant                  constVal(3) = 0x40100000 (2.25)
    7. zero_2_slots_unmasked          expectedA(0..1) = 0
    8. copy_constant                  expectedA(2) = 0x3F580000 (0.84375)
    9. copy_constant                  expectedA(3) = 0x3F800000 (1.0)
   10. copy_constant                  expectedB(0) = 0x3F800000 (1.0)
   11. zero_slot_unmasked             expectedB(1) = 0
   12. copy_constant                  expectedB(2) = 0x3F800000 (1.0)
   13. copy_constant                  expectedB(3) = 0x3F800000 (1.0)
   14. zero_slot_unmasked             $0 = 0
   15. copy_slot_unmasked             $1 = expectedA(0)
   16. cmpeq_float                    $0 = equal($0, $1)
   17. zero_2_slots_unmasked          $1..2 = 0
   18. copy_2_slots_unmasked          $3..4 = expectedA(0..1)
   19. cmpeq_2_floats                 $1..2 = equal($1..2, $3..4)
   20. bitwise_and_int                $1 &= $2
   21. bitwise_and_int                $0 &= $1
   22. zero_2_slots_unmasked          $1..2 = 0
   23. copy_constant                  $3 = 0x3F580000 (0.84375)
   24. copy_3_slots_unmasked          $4..6 = expectedA(0..2)
   25. cmpeq_3_floats                 $1..3 = equal($1..3, $4..6)
   26. bitwise_and_int                $2 &= $3
   27. bitwise_and_int                $1 &= $2
   28. bitwise_and_int                $0 &= $1
   29. zero_2_slots_unmasked          $1..2 = 0
   30. copy_constant                  $3 = 0x3F580000 (0.84375)
   31. copy_constant                  $4 = 0x3F800000 (1.0)
   32. copy_4_slots_unmasked          $5..8 = expectedA
   33. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
   34. bitwise_and_2_ints             $1..2 &= $3..4
   35. bitwise_and_int                $1 &= $2
   36. bitwise_and_int                $0 &= $1
   37. zero_slot_unmasked             $1 = 0
   38. copy_slot_unmasked             $2 = expectedA(0)
   39. cmpeq_float                    $1 = equal($1, $2)
   40. bitwise_and_int                $0 &= $1
   41. zero_2_slots_unmasked          $1..2 = 0
   42. copy_2_slots_unmasked          $3..4 = expectedA(0..1)
   43. cmpeq_2_floats                 $1..2 = equal($1..2, $3..4)
   44. bitwise_and_int                $1 &= $2
   45. bitwise_and_int                $0 &= $1
   46. zero_2_slots_unmasked          $1..2 = 0
   47. copy_constant                  $3 = 0x3F580000 (0.84375)
   48. copy_3_slots_unmasked          $4..6 = expectedA(0..2)
   49. cmpeq_3_floats                 $1..3 = equal($1..3, $4..6)
   50. bitwise_and_int                $2 &= $3
   51. bitwise_and_int                $1 &= $2
   52. bitwise_and_int                $0 &= $1
   53. zero_2_slots_unmasked          $1..2 = 0
   54. copy_constant                  $3 = 0x3F580000 (0.84375)
   55. copy_constant                  $4 = 0x3F800000 (1.0)
   56. copy_4_slots_unmasked          $5..8 = expectedA
   57. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
   58. bitwise_and_2_ints             $1..2 &= $3..4
   59. bitwise_and_int                $1 &= $2
   60. bitwise_and_int                $0 &= $1
   61. copy_constant                  $1 = colorRed(1)
   62. copy_constant                  $2 = colorGreen(1)
   63. copy_constant                  $3 = 0xBFA00000 (-1.25)
   64. smoothstep_n_floats            $1 = smoothstep($1, $2, $3)
   65. copy_slot_unmasked             $2 = expectedA(0)
   66. cmpeq_float                    $1 = equal($1, $2)
   67. bitwise_and_int                $0 &= $1
   68. copy_constant                  $1 = colorRed(1)
   69. copy_slot_unmasked             $2 = $1
   70. copy_constant                  $3 = colorGreen(1)
   71. copy_slot_unmasked             $4 = $3
   72. copy_constant                  $5 = 0xBFA00000 (-1.25)
   73. zero_slot_unmasked             $6 = 0
   74. smoothstep_n_floats            $1..2 = smoothstep($1..2, $3..4, $5..6)
   75. copy_2_slots_unmasked          $3..4 = expectedA(0..1)
   76. cmpeq_2_floats                 $1..2 = equal($1..2, $3..4)
   77. bitwise_and_int                $1 &= $2
   78. bitwise_and_int                $0 &= $1
   79. copy_constant                  $1 = colorRed(1)
   80. swizzle_3                      $1..3 = ($1..3).xxx
   81. copy_constant                  $4 = colorGreen(1)
   82. swizzle_3                      $4..6 = ($4..6).xxx
   83. copy_constant                  $7 = 0xBFA00000 (-1.25)
   84. zero_slot_unmasked             $8 = 0
   85. copy_constant                  $9 = 0x3F400000 (0.75)
   86. smoothstep_n_floats            $1..3 = smoothstep($1..3, $4..6, $7..9)
   87. copy_3_slots_unmasked          $4..6 = expectedA(0..2)
   88. cmpeq_3_floats                 $1..3 = equal($1..3, $4..6)
   89. bitwise_and_int                $2 &= $3
   90. bitwise_and_int                $1 &= $2
   91. bitwise_and_int                $0 &= $1
   92. copy_constant                  $1 = colorRed(1)
   93. swizzle_4                      $1..4 = ($1..4).xxxx
   94. copy_constant                  $5 = colorGreen(1)
   95. swizzle_4                      $5..8 = ($5..8).xxxx
   96. copy_4_slots_unmasked          $9..12 = constVal
   97. smoothstep_n_floats            $1..4 = smoothstep($1..4, $5..8, $9..12)
   98. copy_4_slots_unmasked          $5..8 = expectedA
   99. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  100. bitwise_and_2_ints             $1..2 &= $3..4
  101. bitwise_and_int                $1 &= $2
  102. bitwise_and_int                $0 &= $1
  103. copy_constant                  $1 = 0x3F800000 (1.0)
  104. copy_slot_unmasked             $2 = expectedB(0)
  105. cmpeq_float                    $1 = equal($1, $2)
  106. bitwise_and_int                $0 &= $1
  107. copy_constant                  $1 = 0x3F800000 (1.0)
  108. zero_slot_unmasked             $2 = 0
  109. copy_2_slots_unmasked          $3..4 = expectedB(0..1)
  110. cmpeq_2_floats                 $1..2 = equal($1..2, $3..4)
  111. bitwise_and_int                $1 &= $2
  112. bitwise_and_int                $0 &= $1
  113. copy_constant                  $1 = 0x3F800000 (1.0)
  114. zero_slot_unmasked             $2 = 0
  115. copy_constant                  $3 = 0x3F800000 (1.0)
  116. copy_3_slots_unmasked          $4..6 = expectedB(0..2)
  117. cmpeq_3_floats                 $1..3 = equal($1..3, $4..6)
  118. bitwise_and_int                $2 &= $3
  119. bitwise_and_int                $1 &= $2
  120. bitwise_and_int                $0 &= $1
  121. copy_constant                  $1 = 0x3F800000 (1.0)
  122. zero_slot_unmasked             $2 = 0
  123. copy_constant                  $3 = 0x3F800000 (1.0)
  124. copy_constant                  $4 = 0x3F800000 (1.0)
  125. copy_4_slots_unmasked          $5..8 = expectedB
  126. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  127. bitwise_and_2_ints             $1..2 &= $3..4
  128. bitwise_and_int                $1 &= $2
  129. bitwise_and_int                $0 &= $1
  130. copy_constant                  $1 = colorRed(0)
  131. copy_constant                  $2 = colorGreen(0)
  132. copy_constant                  $3 = 0xBFA00000 (-1.25)
  133. smoothstep_n_floats            $1 = smoothstep($1, $2, $3)
  134. copy_slot_unmasked             $2 = expectedB(0)
  135. cmpeq_float                    $1 = equal($1, $2)
  136. bitwise_and_int                $0 &= $1
  137. copy_2_constants               $1..2 = colorRed(0..1)
  138. copy_2_constants               $3..4 = colorGreen(0..1)
  139. copy_constant                  $5 = 0xBFA00000 (-1.25)
  140. zero_slot_unmasked             $6 = 0
  141. smoothstep_n_floats            $1..2 = smoothstep($1..2, $3..4, $5..6)
  142. copy_2_slots_unmasked          $3..4 = expectedB(0..1)
  143. cmpeq_2_floats                 $1..2 = equal($1..2, $3..4)
  144. bitwise_and_int                $1 &= $2
  145. bitwise_and_int                $0 &= $1
  146. copy_3_constants               $1..3 = colorRed(0..2)
  147. copy_3_constants               $4..6 = colorGreen(0..2)
  148. copy_constant                  $7 = 0xBFA00000 (-1.25)
  149. zero_slot_unmasked             $8 = 0
  150. copy_constant                  $9 = 0x3F400000 (0.75)
  151. smoothstep_n_floats            $1..3 = smoothstep($1..3, $4..6, $7..9)
  152. copy_3_slots_unmasked          $4..6 = expectedB(0..2)
  153. cmpeq_3_floats                 $1..3 = equal($1..3, $4..6)
  154. bitwise_and_int                $2 &= $3
  155. bitwise_and_int                $1 &= $2
  156. bitwise_and_int                $0 &= $1
  157. copy_4_constants               $1..4 = colorRed
  158. copy_4_constants               $5..8 = colorGreen
  159. copy_4_slots_unmasked          $9..12 = constVal
  160. smoothstep_n_floats            $1..4 = smoothstep($1..4, $5..8, $9..12)
  161. copy_4_slots_unmasked          $5..8 = expectedB
  162. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  163. bitwise_and_2_ints             $1..2 &= $3..4
  164. bitwise_and_int                $1 &= $2
  165. bitwise_and_int                $0 &= $1
  166. swizzle_4                      $0..3 = ($0..3).xxxx
  167. copy_4_constants               $4..7 = colorRed
  168. copy_4_constants               $8..11 = colorGreen
  169. mix_4_ints                     $0..3 = mix($4..7, $8..11, $0..3)
  170. load_src                       src.rgba = $0..3
