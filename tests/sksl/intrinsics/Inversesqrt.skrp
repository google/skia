76 instructions

[immutable slots]
i0 = 0xBF800000 (-1.0)
i1 = 0xC0800000 (-4.0)
i2 = 0xC1800000 (-16.0)
i3 = 0xC2800000 (-64.0)
i4 = 0x3F800000 (1.0)
i5 = 0x3F000000 (0.5)
i6 = 0x3F800000 (1.0)
i7 = 0x3F000000 (0.5)
i8 = 0x3E800000 (0.25)
i9 = 0x3F800000 (1.0)
i10 = 0x3F000000 (0.5)
i11 = 0x3E800000 (0.25)
i12 = 0x3E000000 (0.125)

store_src_rg                   coords = src.rg
init_lane_masks                CondMask = LoopMask = RetMask = true
copy_uniform                   $4 = inputVal(0)
invsqrt_float                  $4 = inversesqrt($4)
copy_uniform                   $5 = expected(0)
cmpeq_float                    $4 = equal($4, $5)
copy_2_uniforms                $5..6 = inputVal(0..1)
invsqrt_2_floats               $5..6 = inversesqrt($5..6)
copy_2_uniforms                $7..8 = expected(0..1)
cmpeq_2_floats                 $5..6 = equal($5..6, $7..8)
bitwise_and_int                $5 &= $6
bitwise_and_int                $4 &= $5
copy_3_uniforms                $5..7 = inputVal(0..2)
invsqrt_3_floats               $5..7 = inversesqrt($5..7)
copy_3_uniforms                $8..10 = expected(0..2)
cmpeq_3_floats                 $5..7 = equal($5..7, $8..10)
bitwise_and_int                $6 &= $7
bitwise_and_int                $5 &= $6
bitwise_and_int                $4 &= $5
copy_4_uniforms                $5..8 = inputVal
invsqrt_4_floats               $5..8 = inversesqrt($5..8)
copy_4_uniforms                $9..12 = expected
cmpeq_4_floats                 $5..8 = equal($5..8, $9..12)
bitwise_and_2_ints             $5..6 &= $7..8
bitwise_and_int                $5 &= $6
bitwise_and_int                $4 &= $5
copy_uniform                   $5 = expected(0)
cmpeq_imm_float                $5 = equal($5, 0x3F800000 (1.0))
bitwise_and_int                $4 &= $5
copy_2_immutables_unmasked     $5..6 = i4..5 [0x3F800000 (1.0), 0x3F000000 (0.5)]
copy_2_uniforms                $7..8 = expected(0..1)
cmpeq_2_floats                 $5..6 = equal($5..6, $7..8)
bitwise_and_int                $5 &= $6
bitwise_and_int                $4 &= $5
copy_3_immutables_unmasked     $5..7 = i6..8 [0x3F800000 (1.0), 0x3F000000 (0.5), 0x3E800000 (0.25)]
copy_3_uniforms                $8..10 = expected(0..2)
cmpeq_3_floats                 $5..7 = equal($5..7, $8..10)
bitwise_and_int                $6 &= $7
bitwise_and_int                $5 &= $6
bitwise_and_int                $4 &= $5
copy_4_immutables_unmasked     $5..8 = i9..12 [0x3F800000 (1.0), 0x3F000000 (0.5), 0x3E800000 (0.25), 0x3E000000 (0.125)]
copy_4_uniforms                $9..12 = expected
cmpeq_4_floats                 $5..8 = equal($5..8, $9..12)
bitwise_and_2_ints             $5..6 &= $7..8
bitwise_and_int                $5 &= $6
bitwise_and_int                $4 &= $5
copy_constant                  $5 = 0xBF800000 (-1.0)
invsqrt_float                  $5 = inversesqrt($5)
copy_uniform                   $6 = expected(0)
cmpeq_float                    $5 = equal($5, $6)
bitwise_and_int                $4 &= $5
copy_2_immutables_unmasked     $5..6 = i0..1 [0xBF800000 (-1.0), 0xC0800000 (-4.0)]
invsqrt_2_floats               $5..6 = inversesqrt($5..6)
copy_2_uniforms                $7..8 = expected(0..1)
cmpeq_2_floats                 $5..6 = equal($5..6, $7..8)
bitwise_and_int                $5 &= $6
bitwise_and_int                $4 &= $5
copy_3_immutables_unmasked     $5..7 = i0..2 [0xBF800000 (-1.0), 0xC0800000 (-4.0), 0xC1800000 (-16.0)]
invsqrt_3_floats               $5..7 = inversesqrt($5..7)
copy_3_uniforms                $8..10 = expected(0..2)
cmpeq_3_floats                 $5..7 = equal($5..7, $8..10)
bitwise_and_int                $6 &= $7
bitwise_and_int                $5 &= $6
bitwise_and_int                $4 &= $5
copy_4_immutables_unmasked     $5..8 = i0..3 [0xBF800000 (-1.0), 0xC0800000 (-4.0), 0xC1800000 (-16.0), 0xC2800000 (-64.0)]
invsqrt_4_floats               $5..8 = inversesqrt($5..8)
copy_4_uniforms                $9..12 = expected
cmpeq_4_floats                 $5..8 = equal($5..8, $9..12)
bitwise_and_2_ints             $5..6 &= $7..8
bitwise_and_int                $5 &= $6
bitwise_and_int                $4 &= $5
branch_if_no_active_lanes_eq   branch +3 (label 0 at #75) if no lanes of $4 == 0xFFFFFFFF
copy_4_uniforms                $0..3 = colorGreen
jump                           jump +3 (label 1 at #77)
label                          label 0
copy_4_uniforms                $0..3 = colorRed
label                          label 0x00000001
load_src                       src.rgba = $0..3
