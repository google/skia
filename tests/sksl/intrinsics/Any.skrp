40 instructions

store_src_rg                   coords = src.rg
init_lane_masks                CondMask = LoopMask = RetMask = true
copy_4_uniforms                $0..3 = colorGreen
swizzle_4                      $0..3 = ($0..3).xxyz
splat_4_constants              $4..7 = 0
cmpne_4_floats                 $0..3 = notEqual($0..3, $4..7)
copy_4_slots_unmasked          inputVal = $0..3
copy_4_uniforms                $0..3 = colorGreen
swizzle_3                      $1..3 = ($1..3).xxz
splat_4_constants              $4..7 = 0
cmpne_4_floats                 $0..3 = notEqual($0..3, $4..7)
copy_4_slots_unmasked          expected = $0..3
copy_2_slots_unmasked          $0..1 = inputVal(0..1)
bitwise_or_int                 $0 |= $1
copy_slot_unmasked             $1 = expected(0)
cmpeq_int                      $0 = equal($0, $1)
copy_3_slots_unmasked          $1..3 = inputVal(0..2)
bitwise_or_int                 $2 |= $3
bitwise_or_int                 $1 |= $2
copy_slot_unmasked             $2 = expected(1)
cmpeq_int                      $1 = equal($1, $2)
bitwise_and_int                $0 &= $1
copy_4_slots_unmasked          $1..4 = inputVal
bitwise_or_2_ints              $1..2 |= $3..4
bitwise_or_int                 $1 |= $2
copy_slot_unmasked             $2 = expected(2)
cmpeq_int                      $1 = equal($1, $2)
bitwise_and_int                $0 &= $1
copy_slot_unmasked             $1 = expected(0)
cmpeq_imm_int                  $1 = equal($1, 0)
bitwise_and_int                $0 &= $1
copy_slot_unmasked             $1 = expected(1)
bitwise_and_int                $0 &= $1
copy_slot_unmasked             $1 = expected(2)
bitwise_and_int                $0 &= $1
swizzle_4                      $0..3 = ($0..3).xxxx
copy_4_uniforms                $4..7 = colorRed
copy_4_uniforms                $8..11 = colorGreen
mix_4_ints                     $0..3 = mix($4..7, $8..11, $0..3)
load_src                       src.rgba = $0..3
