60 instructions

[immutable slots]
i0 = 0x40000000 (2.0)
i1 = 0xC0000000 (-2.0)
i2 = 0x3F800000 (1.0)
i3 = 0x41000000 (8.0)
i4 = 0x40400000 (3.0)
i5 = 0x40400000 (3.0)
i6 = 0x40A00000 (5.0)
i7 = 0x41500000 (13.0)
i8 = 0x3D4CCCCD (0.05)

store_src_rg                   coords = src.rg
init_lane_masks                CondMask = LoopMask = RetMask = true
copy_4_uniforms                $0..3 = testMatrix2x2
copy_4_immutables_unmasked     $4..7 = i0..3 [0x40000000 (2.0), 0xC0000000 (-2.0), 0x3F800000 (1.0), 0x41000000 (8.0)]
add_4_floats                   $0..3 += $4..7
copy_4_slots_unmasked          inputVal = $0..3
copy_slot_unmasked             $0 = inputVal(0)
bitwise_and_imm_int            $0 &= 0x7FFFFFFF
add_imm_float                  $0 += 0xC0400000 (-3.0)
bitwise_and_imm_int            $0 &= 0x7FFFFFFF
cmplt_imm_float                $0 = lessThan($0, 0x3D4CCCCD (0.05))
copy_2_slots_unmasked          $1..2 = inputVal(0..1)
copy_2_slots_unmasked          $3..4 = $1..2
dot_2_floats                   $1 = dot($1..2, $3..4)
sqrt_float                     $1 = sqrt($1)
add_imm_float                  $1 += 0xC0400000 (-3.0)
bitwise_and_imm_int            $1 &= 0x7FFFFFFF
cmplt_imm_float                $1 = lessThan($1, 0x3D4CCCCD (0.05))
bitwise_and_int                $0 &= $1
copy_3_slots_unmasked          $1..3 = inputVal(0..2)
copy_3_slots_unmasked          $4..6 = $1..3
dot_3_floats                   $1 = dot($1..3, $4..6)
sqrt_float                     $1 = sqrt($1)
add_imm_float                  $1 += 0xC0A00000 (-5.0)
bitwise_and_imm_int            $1 &= 0x7FFFFFFF
cmplt_imm_float                $1 = lessThan($1, 0x3D4CCCCD (0.05))
bitwise_and_int                $0 &= $1
copy_4_slots_unmasked          $1..4 = inputVal
copy_4_slots_unmasked          $5..8 = $1..4
dot_4_floats                   $1 = dot($1..4, $5..8)
sqrt_float                     $1 = sqrt($1)
add_imm_float                  $1 += 0xC1500000 (-13.0)
bitwise_and_imm_int            $1 &= 0x7FFFFFFF
cmplt_imm_float                $1 = lessThan($1, 0x3D4CCCCD (0.05))
bitwise_and_int                $0 &= $1
copy_constant                  $1 = 0x40400000 (3.0)
add_imm_float                  $1 += 0xC0400000 (-3.0)
bitwise_and_imm_int            $1 &= 0x7FFFFFFF
cmplt_imm_float                $1 = lessThan($1, 0x3D4CCCCD (0.05))
bitwise_and_int                $0 &= $1
copy_constant                  $1 = 0x40400000 (3.0)
add_imm_float                  $1 += 0xC0400000 (-3.0)
bitwise_and_imm_int            $1 &= 0x7FFFFFFF
cmplt_imm_float                $1 = lessThan($1, 0x3D4CCCCD (0.05))
bitwise_and_int                $0 &= $1
copy_constant                  $1 = 0x40A00000 (5.0)
add_imm_float                  $1 += 0xC0A00000 (-5.0)
bitwise_and_imm_int            $1 &= 0x7FFFFFFF
cmplt_imm_float                $1 = lessThan($1, 0x3D4CCCCD (0.05))
bitwise_and_int                $0 &= $1
copy_constant                  $1 = 0x41500000 (13.0)
add_imm_float                  $1 += 0xC1500000 (-13.0)
bitwise_and_imm_int            $1 &= 0x7FFFFFFF
cmplt_imm_float                $1 = lessThan($1, 0x3D4CCCCD (0.05))
bitwise_and_int                $0 &= $1
swizzle_4                      $0..3 = ($0..3).xxxx
copy_4_uniforms                $4..7 = colorRed
copy_4_uniforms                $8..11 = colorGreen
mix_4_ints                     $0..3 = mix($4..7, $8..11, $0..3)
load_src                       src.rgba = $0..3
