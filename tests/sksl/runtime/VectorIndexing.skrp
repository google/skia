    1. store_src_rg                   xy = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. zero_2_slots_unmasked          _0_sum, _1_i = 0
    4. label                          label 0x00000001
    5. copy_slot_unmasked             $0 = _0_sum
    6. copy_slot_unmasked             $7 = _1_i
    7. copy_from_indirect_uniform_unm $1 = Indirect(u2(0) + $7)
    8. add_float                      $0 += $1
    9. copy_slot_unmasked             _0_sum = $0
   10. copy_slot_unmasked             $0 = _1_i
   11. copy_constant                  $1 = 0x00000001 (1.401298e-45)
   12. add_int                        $0 += $1
   13. copy_slot_unmasked             _1_i = $0
   14. copy_constant                  $1 = 0x00000004 (5.605194e-45)
   15. cmplt_int                      $0 = lessThan($0, $1)
   16. stack_rewind
   17. branch_if_no_active_lanes_eq   branch -13 (label 1 at #4) if no lanes of $0 == 0x00000000 (0.0)
   18. label                          label 0x00000000
   19. copy_constant                  _2_prod = 0x3F800000 (1.0)
   20. zero_slot_unmasked             _3_i = 0
   21. label                          label 0x00000003
   22. copy_slot_unmasked             $0 = _2_prod
   23. copy_slot_unmasked             $7 = _3_i
   24. copy_constant                  $8 = 0x00000002 (2.802597e-45)
   25. cmplt_int                      $7 = lessThan($7, $8)
   26. copy_slot_unmasked             $8 = _3_i
   27. zero_slot_unmasked             $9 = 0
   28. mix_int                        $7 = mix($8, $9, $7)
   29. copy_from_indirect_uniform_unm $1 = Indirect(u3(0) + $7)
   30. mul_float                      $0 *= $1
   31. copy_slot_unmasked             _2_prod = $0
   32. copy_slot_unmasked             $0 = _3_i
   33. copy_constant                  $1 = 0x00000001 (1.401298e-45)
   34. add_int                        $0 += $1
   35. copy_slot_unmasked             _3_i = $0
   36. copy_constant                  $1 = 0x00000004 (5.605194e-45)
   37. cmplt_int                      $0 = lessThan($0, $1)
   38. stack_rewind
   39. branch_if_no_active_lanes_eq   branch -18 (label 3 at #21) if no lanes of $0 == 0x00000000 (0.0)
   40. label                          label 0x00000002
   41. copy_constant                  $0 = u1(0)
   42. copy_slot_unmasked             $1 = _0_sum
   43. copy_slot_unmasked             $2 = _2_prod
   44. store_return_mask              $3 = RetMask
   45. copy_constant                  i = 0x00000007 (9.809089e-45)
   46. store_loop_mask                $4 = LoopMask
   47. jump                           jump +10 (label 7 at #57)
   48. label                          label 0x00000008
   49. copy_slot_unmasked             $7 = i
   50. copy_from_indirect_uniform_unm $5 = Indirect(u4(0) + $7)
   51. copy_slot_masked               [index_clamped_out_of_bounds].result = Mask($5)
   52. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   53. copy_slot_unmasked             $5 = i
   54. copy_constant                  $6 = 0x00000001 (1.401298e-45)
   55. add_int                        $5 += $6
   56. copy_slot_masked               i = Mask($5)
   57. label                          label 0x00000007
   58. copy_slot_unmasked             $5 = i
   59. copy_constant                  $6 = 0x00000008 (1.121039e-44)
   60. cmplt_int                      $5 = lessThan($5, $6)
   61. merge_loop_mask                LoopMask &= $5
   62. stack_rewind
   63. branch_if_any_lanes_active     branch_if_any_lanes_active -15 (label 8 at #48)
   64. label                          label 0x00000006
   65. load_loop_mask                 LoopMask = $4
   66. load_return_mask               RetMask = $3
   67. copy_slot_unmasked             $3 = [index_clamped_out_of_bounds].result
   68. label                          label 0x00000005
   69. load_src                       src.rgba = $0..3
