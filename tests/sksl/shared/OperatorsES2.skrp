97 instructions

store_src_rg                   coords = src.rg
init_lane_masks                CondMask = LoopMask = RetMask = true
copy_constant                  x = 0x3F800000 (1.0)
copy_constant                  y = 0x40000000 (2.0)
copy_constant                  z = 0x00000003 (4.203895e-45)
copy_slot_unmasked             $0 = x
copy_slot_unmasked             $1 = x
sub_float                      $0 -= $1
copy_slot_unmasked             $1 = y
copy_slot_unmasked             $2 = x
mul_float                      $1 *= $2
copy_slot_unmasked             $2 = x
mul_float                      $1 *= $2
copy_slot_unmasked             $2 = y
copy_slot_unmasked             $3 = x
sub_float                      $2 -= $3
mul_float                      $1 *= $2
add_float                      $0 += $1
copy_slot_unmasked             x = $0
copy_slot_unmasked             $1 = y
div_float                      $0 /= $1
copy_slot_unmasked             $1 = x
div_float                      $0 /= $1
copy_slot_unmasked             y = $0
copy_slot_unmasked             $0 = z
copy_constant                  $1 = 0x00000002 (2.802597e-45)
div_int                        $0 /= $1
mul_imm_int                    $0 *= 0x00000003
add_imm_int                    $0 += 0x00000004
add_imm_int                    $0 += 0xFFFFFFFE
copy_slot_unmasked             z = $0
copy_constant                  $0 = 0x40800000 (4.0)
copy_slot_unmasked             $1 = x
cmplt_float                    $0 = lessThan($0, $1)
copy_slot_unmasked             $1 = x
cmplt_imm_float                $1 = lessThan($1, 0x40000000 (2.0))
cmpeq_int                      $0 = equal($0, $1)
copy_uniform                   $1 = unknownInput
cmple_imm_float                $1 = lessThanEqual($1, 0x40000000 (2.0))
copy_slot_unmasked             $2 = y
copy_slot_unmasked             $3 = x
cmple_float                    $2 = lessThanEqual($2, $3)
bitwise_and_int                $1 &= $2
bitwise_or_int                 $0 |= $1
copy_slot_unmasked             b = $0
copy_constant                  $0 = 0x40000000 (2.0)
copy_uniform                   $1 = unknownInput
cmplt_float                    $0 = lessThan($0, $1)
copy_slot_unmasked             c = $0
copy_2_slots_unmasked          $0..1 = b, c
bitwise_xor_int                $0 ^= $1
copy_slot_unmasked             d = $0
copy_2_slots_unmasked          $0..1 = b, c
bitwise_and_int                $0 &= $1
copy_slot_unmasked             e = $0
copy_2_slots_unmasked          $0..1 = b, c
bitwise_or_int                 $0 |= $1
copy_slot_unmasked             f = $0
add_imm_float                  x += 0x41400000 (12.0)
add_imm_float                  x += 0xC1400000 (-12.0)
copy_2_slots_unmasked          $0..1 = x, y
mul_imm_float                  $1 *= 0x3DCCCCCD (0.1)
copy_slot_unmasked             y = $1
mul_float                      $0 *= $1
copy_slot_unmasked             x = $0
copy_constant                  x = 0x40C00000 (6.0)
copy_slot_unmasked             $0 = b
bitwise_and_imm_int            $0 &= 0x3F800000
copy_slot_unmasked             $1 = c
bitwise_and_imm_int            $1 &= 0x3F800000
mul_float                      $0 *= $1
copy_slot_unmasked             $1 = d
bitwise_and_imm_int            $1 &= 0x3F800000
mul_float                      $0 *= $1
copy_slot_unmasked             $1 = e
bitwise_and_imm_int            $1 &= 0x3F800000
mul_float                      $0 *= $1
copy_slot_unmasked             $1 = f
bitwise_and_imm_int            $1 &= 0x3F800000
mul_float                      $0 *= $1
copy_slot_unmasked             y = $0
copy_constant                  y = 0x40C00000 (6.0)
add_imm_int                    z += 0xFFFFFFFF
copy_constant                  z = 0x00000006 (8.407791e-45)
copy_slot_unmasked             $0 = x
cmpeq_imm_float                $0 = equal($0, 0x40C00000 (6.0))
copy_slot_unmasked             $1 = y
cmpeq_imm_float                $1 = equal($1, 0x40C00000 (6.0))
bitwise_and_int                $0 &= $1
copy_slot_unmasked             $1 = z
cmpeq_imm_int                  $1 = equal($1, 0x00000006)
bitwise_and_int                $0 &= $1
swizzle_4                      $0..3 = ($0..3).xxxx
copy_4_uniforms                $4..7 = colorRed
copy_4_uniforms                $8..11 = colorGreen
mix_4_ints                     $0..3 = mix($4..7, $8..11, $0..3)
load_src                       src.rgba = $0..3
