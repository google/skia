161 instructions

[immutable slots]
i0 = 0
i1 = 0xBF800000 (-1.0)
i2 = 0
i3 = 0xBF800000 (-1.0)
i4 = 0xBF800000 (-1.0)
i5 = 0xC0000000 (-2.0)
i6 = 0xC0400000 (-3.0)
i7 = 0xC0800000 (-4.0)
i8 = 0xFFFFFFFB
i9 = 0x00000005 (7.006492e-45)

store_src_rg                   v0..1 = src.rg
init_lane_masks                CondMask = LoopMask = RetMask = true
copy_constant                  ok = 0xFFFFFFFF
copy_constant                  i = 0x00000005 (7.006492e-45)
add_imm_int                    i += 0x00000001
copy_2_slots_unmasked          $0..1 = ok, i
cmpeq_imm_int                  $1 = equal($1, 0x00000006)
bitwise_and_int                $0 &= $1
copy_slot_unmasked             ok = $0
store_condition_mask           $13 = CondMask
copy_slot_unmasked             $14 = ok
copy_constant                  $0 = 0
merge_condition_mask           CondMask = $13 & $14
branch_if_no_lanes_active      branch_if_no_lanes_active +6 (label 0 at #20)
copy_slot_unmasked             $1 = i
add_imm_int                    $1 += 0x00000001
copy_slot_masked               i = Mask($1)
cmpeq_imm_int                  $1 = equal($1, 0x00000007)
copy_slot_masked               $0 = Mask($1)
label                          label 0
load_condition_mask            CondMask = $13
copy_slot_unmasked             ok = $0
store_condition_mask           $13 = CondMask
copy_slot_unmasked             $14 = ok
copy_constant                  $0 = 0
merge_condition_mask           CondMask = $13 & $14
branch_if_no_lanes_active      branch_if_no_lanes_active +6 (label 1 at #33)
copy_slot_unmasked             $1 = i
add_imm_int                    $1 += 0xFFFFFFFF
copy_slot_masked               i = Mask($1)
cmpeq_imm_int                  $1 = equal($1, 0x00000006)
copy_slot_masked               $0 = Mask($1)
label                          label 0x00000001
load_condition_mask            CondMask = $13
copy_slot_unmasked             ok = $0
add_imm_int                    i += 0xFFFFFFFF
copy_2_slots_unmasked          $0..1 = ok, i
cmpeq_imm_int                  $1 = equal($1, 0x00000005)
bitwise_and_int                $0 &= $1
copy_slot_unmasked             ok = $0
copy_constant                  f = 0x3F000000 (0.5)
add_imm_float                  f += 0x3F800000 (1.0)
copy_slot_unmasked             $0 = ok
copy_slot_unmasked             $1 = f
cmpeq_imm_float                $1 = equal($1, 0x3FC00000 (1.5))
bitwise_and_int                $0 &= $1
copy_slot_unmasked             ok = $0
store_condition_mask           $13 = CondMask
copy_slot_unmasked             $14 = ok
copy_constant                  $0 = 0
merge_condition_mask           CondMask = $13 & $14
branch_if_no_lanes_active      branch_if_no_lanes_active +6 (label 2 at #58)
copy_slot_unmasked             $1 = f
add_imm_float                  $1 += 0x3F800000 (1.0)
copy_slot_masked               f = Mask($1)
cmpeq_imm_float                $1 = equal($1, 0x40200000 (2.5))
copy_slot_masked               $0 = Mask($1)
label                          label 0x00000002
load_condition_mask            CondMask = $13
copy_slot_unmasked             ok = $0
store_condition_mask           $13 = CondMask
copy_slot_unmasked             $14 = ok
copy_constant                  $0 = 0
merge_condition_mask           CondMask = $13 & $14
branch_if_no_lanes_active      branch_if_no_lanes_active +6 (label 3 at #71)
copy_slot_unmasked             $1 = f
add_imm_float                  $1 += 0xBF800000 (-1.0)
copy_slot_masked               f = Mask($1)
cmpeq_imm_float                $1 = equal($1, 0x3FC00000 (1.5))
copy_slot_masked               $0 = Mask($1)
label                          label 0x00000003
load_condition_mask            CondMask = $13
copy_slot_unmasked             ok = $0
add_imm_float                  f += 0xBF800000 (-1.0)
copy_slot_unmasked             $0 = ok
copy_slot_unmasked             $1 = f
cmpeq_imm_float                $1 = equal($1, 0x3F000000 (0.5))
bitwise_and_int                $0 &= $1
copy_slot_unmasked             ok = $0
splat_2_constants              f2 = 0x3F000000 (0.5)
add_imm_float                  f2(0) += 0x3F800000 (1.0)
copy_slot_unmasked             $0 = ok
copy_slot_unmasked             $1 = f2(0)
cmpeq_imm_float                $1 = equal($1, 0x3FC00000 (1.5))
bitwise_and_int                $0 &= $1
copy_slot_unmasked             ok = $0
store_condition_mask           $13 = CondMask
copy_slot_unmasked             $14 = ok
copy_constant                  $0 = 0
merge_condition_mask           CondMask = $13 & $14
branch_if_no_lanes_active      branch_if_no_lanes_active +6 (label 4 at #97)
copy_slot_unmasked             $1 = f2(0)
add_imm_float                  $1 += 0x3F800000 (1.0)
copy_slot_masked               f2(0) = Mask($1)
cmpeq_imm_float                $1 = equal($1, 0x40200000 (2.5))
copy_slot_masked               $0 = Mask($1)
label                          label 0x00000004
load_condition_mask            CondMask = $13
copy_slot_unmasked             ok = $0
store_condition_mask           $13 = CondMask
copy_slot_unmasked             $14 = ok
copy_constant                  $0 = 0
merge_condition_mask           CondMask = $13 & $14
branch_if_no_lanes_active      branch_if_no_lanes_active +6 (label 5 at #110)
copy_slot_unmasked             $1 = f2(0)
add_imm_float                  $1 += 0xBF800000 (-1.0)
copy_slot_masked               f2(0) = Mask($1)
cmpeq_imm_float                $1 = equal($1, 0x3FC00000 (1.5))
copy_slot_masked               $0 = Mask($1)
label                          label 0x00000005
load_condition_mask            CondMask = $13
copy_slot_unmasked             ok = $0
add_imm_float                  f2(0) += 0xBF800000 (-1.0)
copy_slot_unmasked             $0 = ok
copy_slot_unmasked             $1 = f2(0)
cmpeq_imm_float                $1 = equal($1, 0x3F000000 (0.5))
bitwise_and_int                $0 &= $1
copy_slot_unmasked             ok = $0
copy_uniform                   $1 = colorGreen(0)
cmpne_imm_float                $1 = notEqual($1, 0x3F800000 (1.0))
bitwise_and_int                $0 &= $1
copy_slot_unmasked             ok = $0
copy_uniform                   $1 = colorGreen(1)
bitwise_xor_imm_int            $1 ^= 0x80000000
cmpeq_imm_float                $1 = equal($1, 0xBF800000 (-1.0))
bitwise_and_int                $0 &= $1
copy_slot_unmasked             ok = $0
copy_4_immutables_unmasked     $1..4 = i0..3 [0, 0xBF800000 (-1.0), 0, 0xBF800000 (-1.0)]
copy_4_uniforms                $5..8 = colorGreen
splat_4_constants              $9..12 = 0x80000000 (-0.0)
bitwise_xor_4_ints             $5..8 ^= $9..12
cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
bitwise_and_2_ints             $1..2 &= $3..4
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_slot_unmasked             ok = $0
copy_4_immutables_unmasked     $1..4 = i4..7 [0xBF800000 (-1.0), 0xC0000000 (-2.0), 0xC0400000 (-3.0), 0xC0800000 (-4.0)]
copy_4_uniforms                $5..8 = testMatrix2x2
splat_4_constants              $9..12 = 0x80000000 (-0.0)
bitwise_xor_4_ints             $5..8 ^= $9..12
cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
bitwise_and_2_ints             $1..2 &= $3..4
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_slot_unmasked             ok = $0
copy_slot_unmasked             $0 = i
copy_slot_unmasked             $1 = i
mul_imm_int                    $1 *= 0xFFFFFFFF
copy_2_slots_unmasked          iv = $0..1
copy_2_slots_unmasked          $0..1 = ok, i
mul_imm_int                    $1 *= 0xFFFFFFFF
cmpeq_imm_int                  $1 = equal($1, 0xFFFFFFFB)
bitwise_and_int                $0 &= $1
copy_slot_unmasked             ok = $0
copy_2_slots_unmasked          $1..2 = iv
splat_2_constants              $3..4 = 0xFFFFFFFF
mul_2_ints                     $1..2 *= $3..4
copy_2_immutables_unmasked     $3..4 = i8..9 [0xFFFFFFFB, 0x00000005 (7.006492e-45)]
cmpeq_2_ints                   $1..2 = equal($1..2, $3..4)
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_slot_unmasked             ok = $0
swizzle_4                      $0..3 = ($0..3).xxxx
copy_4_uniforms                $4..7 = colorRed
copy_4_uniforms                $8..11 = colorGreen
mix_4_ints                     $0..3 = mix($4..7, $8..11, $0..3)
load_src                       src.rgba = $0..3
