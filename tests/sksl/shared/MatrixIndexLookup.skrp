91 instructions

[immutable slots]
i0 = 0x3F800000 (1.0)
i1 = 0x40000000 (2.0)
i2 = 0x40400000 (3.0)
i3 = 0x3F800000 (1.0)
i4 = 0x40000000 (2.0)
i5 = 0x40400000 (3.0)
i6 = 0x40800000 (4.0)

store_src_rg                   coords = src.rg
init_lane_masks                CondMask = LoopMask = RetMask = true
store_condition_mask           $12 = CondMask
branch_if_no_lanes_active      branch_if_no_lanes_active +42 (label 2 at #46)
store_return_mask              $13 = RetMask
copy_4_uniforms                matrix(0..3) = testMatrix3x3(0..3)
copy_4_uniforms                matrix(4..7) = testMatrix3x3(4..7)
copy_uniform                   matrix(8) = testMatrix3x3(8)
copy_3_immutables_unmasked     expected = i0..2 [0x3F800000 (1.0), 0x40000000 (2.0), 0x40400000 (3.0)]
copy_constant                  index = 0
store_loop_mask                $14 = LoopMask
jump                           jump +22 (label 4 at #34)
label                          label 0x00000005
store_condition_mask           $15 = CondMask
copy_slot_unmasked             $22 = index
mul_imm_int                    $22 *= 0x00000003
copy_from_indirect_unmasked    $16..18 = Indirect(matrix(0..2) + $22)
copy_3_slots_unmasked          $19..21 = expected
cmpne_3_floats                 $16..18 = notEqual($16..18, $19..21)
bitwise_or_int                 $17 |= $18
bitwise_or_int                 $16 |= $17
merge_condition_mask           CondMask = $15 & $16
copy_constant                  $17 = 0
copy_slot_masked               [test3x3].result = Mask($17)
mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
load_condition_mask            CondMask = $15
copy_3_slots_unmasked          $15..17 = expected
splat_3_constants              $18..20 = 0x40400000 (3.0)
add_3_floats                   $15..17 += $18..20
copy_3_slots_masked            expected = Mask($15..17)
copy_slot_unmasked             $15 = index
add_imm_int                    $15 += 0x00000001
copy_slot_masked               index = Mask($15)
label                          label 0x00000004
copy_slot_unmasked             $15 = index
cmplt_imm_int                  $15 = lessThan($15, 0x00000003)
merge_loop_mask                LoopMask &= $15
stack_rewind
branch_if_any_lanes_active     branch_if_any_lanes_active -26 (label 5 at #13)
label                          label 0x00000003
load_loop_mask                 LoopMask = $14
copy_constant                  $14 = 0xFFFFFFFF
copy_slot_masked               [test3x3].result = Mask($14)
load_return_mask               RetMask = $13
copy_slot_unmasked             $13 = [test3x3].result
label                          label 0x00000002
copy_constant                  $0 = 0
merge_condition_mask           CondMask = $12 & $13
branch_if_no_lanes_active      branch_if_no_lanes_active +45 (label 1 at #94)
store_return_mask              $1 = RetMask
copy_4_uniforms                matrix₁(0..3) = testMatrix4x4(0..3)
copy_4_uniforms                matrix₁(4..7) = testMatrix4x4(4..7)
copy_4_uniforms                matrix₁(8..11) = testMatrix4x4(8..11)
copy_4_uniforms                matrix₁(12..15) = testMatrix4x4(12..15)
copy_4_immutables_unmasked     expected₁ = i3..6 [0x3F800000 (1.0), 0x40000000 (2.0), 0x40400000 (3.0), 0x40800000 (4.0)]
copy_constant                  index₁ = 0
store_loop_mask                $2 = LoopMask
jump                           jump +22 (label 8 at #80)
label                          label 0x00000009
store_condition_mask           $3 = CondMask
copy_slot_unmasked             $22 = index₁
mul_imm_int                    $22 *= 0x00000004
copy_from_indirect_unmasked    $4..7 = Indirect(matrix₁(0..3) + $22)
copy_4_slots_unmasked          $8..11 = expected₁
cmpne_4_floats                 $4..7 = notEqual($4..7, $8..11)
bitwise_or_2_ints              $4..5 |= $6..7
bitwise_or_int                 $4 |= $5
merge_condition_mask           CondMask = $3 & $4
copy_constant                  $5 = 0
copy_slot_masked               [test4x4].result = Mask($5)
mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
load_condition_mask            CondMask = $3
copy_4_slots_unmasked          $3..6 = expected₁
splat_4_constants              $7..10 = 0x40800000 (4.0)
add_4_floats                   $3..6 += $7..10
copy_4_slots_masked            expected₁ = Mask($3..6)
copy_slot_unmasked             $3 = index₁
add_imm_int                    $3 += 0x00000001
copy_slot_masked               index₁ = Mask($3)
label                          label 0x00000008
copy_slot_unmasked             $3 = index₁
cmplt_imm_int                  $3 = lessThan($3, 0x00000004)
merge_loop_mask                LoopMask &= $3
stack_rewind
branch_if_any_lanes_active     branch_if_any_lanes_active -26 (label 9 at #59)
label                          label 0x00000007
load_loop_mask                 LoopMask = $2
copy_constant                  $2 = 0xFFFFFFFF
copy_slot_masked               [test4x4].result = Mask($2)
load_return_mask               RetMask = $1
copy_slot_unmasked             $1 = [test4x4].result
label                          label 0x00000006
copy_slot_masked               $0 = Mask($1)
label                          label 0x00000001
load_condition_mask            CondMask = $12
swizzle_4                      $0..3 = ($0..3).xxxx
copy_4_uniforms                $4..7 = colorRed
copy_4_uniforms                $8..11 = colorGreen
mix_4_ints                     $0..3 = mix($4..7, $8..11, $0..3)
load_src                       src.rgba = $0..3
