    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  array[0] = 0x3F800000 (1.0)
    4. copy_constant                  array[1] = 0x40000000 (2.0)
    5. copy_constant                  array[2] = 0x40400000 (3.0)
    6. copy_constant                  array[3] = 0x40800000 (4.0)
    7. copy_constant                  array[4] = 0x40A00000 (5.0)
    8. copy_constant                  $0 = 0x00000001 (1.401298e-45)
    9. copy_constant                  $1 = 0x00000002 (2.802597e-45)
   10. zero_slot_unmasked             $2 = 0
   11. copy_constant                  $3 = 0x3F800000 (1.0)
   12. swizzle_4                      $2..5 = ($2..5).yxxy
   13. copy_4_slots_unmasked          s1.a[0], s1.a[1], s1.a[2], s1.a[3] = array[0], array[1], array[2], array[3]
   14. copy_slot_unmasked             s1.a[4] = array[4]
   15. copy_4_slots_unmasked          s1.x, s1.y, s1.m(0..1) = $0..3
   16. copy_2_slots_unmasked          s1.m(2..3) = $4..5
   17. copy_constant                  $0 = 0x00000001 (1.401298e-45)
   18. copy_constant                  $1 = 0x00000002 (2.802597e-45)
   19. zero_slot_unmasked             $2 = 0
   20. copy_constant                  $3 = 0x3F800000 (1.0)
   21. swizzle_4                      $2..5 = ($2..5).yxxy
   22. copy_4_constants               $6..9 = testArray[0], testArray[1], testArray[2], testArray[3]
   23. copy_constant                  $10 = testArray[4]
   24. copy_4_slots_unmasked          s2.x, s2.y, s2.m(0..1) = $0..3
   25. copy_4_slots_unmasked          s2.m(2..3), s2.a[0], s2.a[1] = $4..7
   26. copy_3_slots_unmasked          s2.a[2], s2.a[3], s2.a[4] = $8..10
   27. copy_constant                  $0 = 0x00000001 (1.401298e-45)
   28. copy_constant                  $1 = 0x00000002 (2.802597e-45)
   29. zero_slot_unmasked             $2 = 0
   30. copy_constant                  $3 = 0x40000000 (2.0)
   31. swizzle_4                      $2..5 = ($2..5).yxxy
   32. copy_constant                  s3.a[0] = 0x3F800000 (1.0)
   33. copy_constant                  s3.a[1] = 0x40000000 (2.0)
   34. copy_constant                  s3.a[2] = 0x40400000 (3.0)
   35. copy_constant                  s3.a[3] = 0x40800000 (4.0)
   36. copy_constant                  s3.a[4] = 0x40A00000 (5.0)
   37. copy_4_slots_unmasked          s3.x, s3.y, s3.m(0..1) = $0..3
   38. copy_2_slots_unmasked          s3.m(2..3) = $4..5
   39. copy_slot_unmasked             $0 = s1.x
   40. copy_slot_unmasked             $1 = s2.x
   41. cmpeq_int                      $0 = equal($0, $1)
   42. copy_slot_unmasked             $1 = s1.y
   43. copy_slot_unmasked             $2 = s2.y
   44. cmpeq_int                      $1 = equal($1, $2)
   45. copy_4_slots_unmasked          $2..5 = s1.m
   46. copy_4_slots_unmasked          $6..9 = s2.m
   47. cmpeq_4_floats                 $2..5 = equal($2..5, $6..9)
   48. bitwise_and_2_ints             $2..3 &= $4..5
   49. bitwise_and_int                $2 &= $3
   50. copy_4_slots_unmasked          $3..6 = s1.a[0], s1.a[1], s1.a[2], s1.a[3]
   51. copy_slot_unmasked             $7 = s1.a[4]
   52. copy_4_slots_unmasked          $8..11 = s2.a[0], s2.a[1], s2.a[2], s2.a[3]
   53. copy_slot_unmasked             $12 = s2.a[4]
   54. cmpeq_n_floats                 $3..7 = equal($3..7, $8..12)
   55. bitwise_and_2_ints             $4..5 &= $6..7
   56. bitwise_and_int                $4 &= $5
   57. bitwise_and_int                $3 &= $4
   58. bitwise_and_2_ints             $0..1 &= $2..3
   59. bitwise_and_int                $0 &= $1
   60. copy_slot_unmasked             $1 = s1.x
   61. copy_slot_unmasked             $2 = s3.x
   62. cmpne_int                      $1 = notEqual($1, $2)
   63. copy_slot_unmasked             $2 = s1.y
   64. copy_slot_unmasked             $3 = s3.y
   65. cmpne_int                      $2 = notEqual($2, $3)
   66. copy_4_slots_unmasked          $3..6 = s1.m
   67. copy_4_slots_unmasked          $7..10 = s3.m
   68. cmpne_4_floats                 $3..6 = notEqual($3..6, $7..10)
   69. bitwise_or_2_ints              $3..4 |= $5..6
   70. bitwise_or_int                 $3 |= $4
   71. copy_4_slots_unmasked          $4..7 = s1.a[0], s1.a[1], s1.a[2], s1.a[3]
   72. copy_slot_unmasked             $8 = s1.a[4]
   73. copy_4_slots_unmasked          $9..12 = s3.a[0], s3.a[1], s3.a[2], s3.a[3]
   74. copy_slot_unmasked             $13 = s3.a[4]
   75. cmpne_n_floats                 $4..8 = notEqual($4..8, $9..13)
   76. bitwise_or_2_ints              $5..6 |= $7..8
   77. bitwise_or_int                 $5 |= $6
   78. bitwise_or_int                 $4 |= $5
   79. bitwise_or_2_ints              $1..2 |= $3..4
   80. bitwise_or_int                 $1 |= $2
   81. bitwise_and_int                $0 &= $1
   82. swizzle_4                      $0..3 = ($0..3).xxxx
   83. copy_4_constants               $4..7 = colorRed
   84. copy_4_constants               $8..11 = colorGreen
   85. mix_4_ints                     $0..3 = mix($4..7, $8..11, $0..3)
   86. load_src                       src.rgba = $0..3
