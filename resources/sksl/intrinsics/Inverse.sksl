uniform half4 colorGreen, colorRed;

half4 main(float2 xy) {
    const float2x2 matrix2x2 = float2x2(1, 2, 3, 4);
    float2x2 inv2x2 = float2x2(-2, 1, 1.5, -0.5);
    float3x3 inv3x3 = float3x3(-24, 18, 5, 20, -15, -4, -5, 4, 1);
    float4x4 inv4x4 = float4x4(-2, -0.5, 1, 0.5, 1, 0.5, 0, -0.5, -8, -1, 2, 2, 3, 0.5, -1, -0.5);
    float Zero = colorGreen.b;

    // This test would require some slack to pass on real GPUs, since `inverse` on GPU hardware
    // introduces a bit of floating-point error.
    return (inverse(matrix2x2) == inv2x2 &&
            inverse(float3x3(1, 2, 3, 0, 1, 4, 5, 6, 0)) == inv3x3 &&
            inverse(float4x4(1, 0, 0, 1, 0, 2, 1, 2, 2, 1, 0, 1, 2, 0, 1, 4)) == inv4x4 &&
            inverse(float3x3(1, 2, 3, 4, 5, 6, 7, 8, 9)) != inv3x3 &&
            inverse(matrix2x2 + Zero) == inv2x2 &&
            inverse(float3x3(1, 2, 3, 0, 1, 4, 5, 6, 0) + Zero) == inv3x3 &&
            inverse(float4x4(1, 0, 0, 1, 0, 2, 1, 2, 2, 1, 0, 1, 2, 0, 1, 4) + Zero) == inv4x4)
                ? colorGreen : colorRed;
}
