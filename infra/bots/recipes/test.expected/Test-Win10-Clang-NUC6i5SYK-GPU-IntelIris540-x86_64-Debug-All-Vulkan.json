[
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]\\resources\\fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copy",
      "[START_DIR]\\skia\\infra\\bots\\assets\\skp\\VERSION",
      "/path/to/tmp/"
    ],
    "infra_step": true,
    "name": "Get downloaded SKP VERSION"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]\\resources\\fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copy",
      "42",
      "[START_DIR]\\tmp\\SKP_VERSION"
    ],
    "infra_step": true,
    "name": "write SKP_VERSION"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]\\resources\\fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copy",
      "[START_DIR]\\skia\\infra\\bots\\assets\\skimage\\VERSION",
      "/path/to/tmp/"
    ],
    "infra_step": true,
    "name": "Get downloaded skimage VERSION"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]\\resources\\fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copy",
      "42",
      "[START_DIR]\\tmp\\SK_IMAGE_VERSION"
    ],
    "infra_step": true,
    "name": "write SK_IMAGE_VERSION"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]\\resources\\fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copy",
      "[START_DIR]\\skia\\infra\\bots\\assets\\svg\\VERSION",
      "/path/to/tmp/"
    ],
    "infra_step": true,
    "name": "Get downloaded SVG VERSION"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]\\resources\\fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copy",
      "42",
      "[START_DIR]\\tmp\\SVG_VERSION"
    ],
    "infra_step": true,
    "name": "write SVG_VERSION"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]\\resources\\fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0777",
      "[START_DIR]\\tmp"
    ],
    "infra_step": true,
    "name": "makedirs tmp_dir"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport contextlib\nimport math\nimport socket\nimport sys\nimport time\nimport urllib2\n\nHASHES_URL = 'https://storage.googleapis.com/skia-infra-gm/hash_files/gold-prod-hashes.txt'\nRETRIES = 5\nTIMEOUT = 60\nWAIT_BASE = 15\n\nsocket.setdefaulttimeout(TIMEOUT)\nfor retry in range(RETRIES):\n  try:\n    with contextlib.closing(\n        urllib2.urlopen(HASHES_URL, timeout=TIMEOUT)) as w:\n      hashes = w.read()\n      with open(sys.argv[1], 'w') as f:\n        f.write(hashes)\n        break\n  except Exception as e:\n    print 'Failed to get uninteresting hashes from %s:' % HASHES_URL\n    print e\n    if retry == RETRIES:\n      raise\n    waittime = WAIT_BASE * math.pow(2, retry)\n    print 'Retry in %d seconds.' % waittime\n    time.sleep(waittime)\n",
      "[START_DIR]\\tmp\\uninteresting_hashes.txt"
    ],
    "env": {
      "BUILDTYPE": "Debug_x64",
      "CHROME_HEADLESS": "1",
      "PATH": "<PATH>;RECIPE_PACKAGE_REPO[depot_tools]",
      "SKIA_OUT": "[START_DIR]\\out"
    },
    "infra_step": true,
    "name": "get uninteresting hashes",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import contextlib@@@",
      "@@@STEP_LOG_LINE@python.inline@import math@@@",
      "@@@STEP_LOG_LINE@python.inline@import socket@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys@@@",
      "@@@STEP_LOG_LINE@python.inline@import time@@@",
      "@@@STEP_LOG_LINE@python.inline@import urllib2@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@HASHES_URL = 'https://storage.googleapis.com/skia-infra-gm/hash_files/gold-prod-hashes.txt'@@@",
      "@@@STEP_LOG_LINE@python.inline@RETRIES = 5@@@",
      "@@@STEP_LOG_LINE@python.inline@TIMEOUT = 60@@@",
      "@@@STEP_LOG_LINE@python.inline@WAIT_BASE = 15@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@socket.setdefaulttimeout(TIMEOUT)@@@",
      "@@@STEP_LOG_LINE@python.inline@for retry in range(RETRIES):@@@",
      "@@@STEP_LOG_LINE@python.inline@  try:@@@",
      "@@@STEP_LOG_LINE@python.inline@    with contextlib.closing(@@@",
      "@@@STEP_LOG_LINE@python.inline@        urllib2.urlopen(HASHES_URL, timeout=TIMEOUT)) as w:@@@",
      "@@@STEP_LOG_LINE@python.inline@      hashes = w.read()@@@",
      "@@@STEP_LOG_LINE@python.inline@      with open(sys.argv[1], 'w') as f:@@@",
      "@@@STEP_LOG_LINE@python.inline@        f.write(hashes)@@@",
      "@@@STEP_LOG_LINE@python.inline@        break@@@",
      "@@@STEP_LOG_LINE@python.inline@  except Exception as e:@@@",
      "@@@STEP_LOG_LINE@python.inline@    print 'Failed to get uninteresting hashes from %s:' % HASHES_URL@@@",
      "@@@STEP_LOG_LINE@python.inline@    print e@@@",
      "@@@STEP_LOG_LINE@python.inline@    if retry == RETRIES:@@@",
      "@@@STEP_LOG_LINE@python.inline@      raise@@@",
      "@@@STEP_LOG_LINE@python.inline@    waittime = WAIT_BASE * math.pow(2, retry)@@@",
      "@@@STEP_LOG_LINE@python.inline@    print 'Retry in %d seconds.' % waittime@@@",
      "@@@STEP_LOG_LINE@python.inline@    time.sleep(waittime)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "import os\nprint os.environ.get('SWARMING_BOT_ID', '')\n"
    ],
    "name": "get swarming bot id",
    "stdout": "/path/to/tmp/",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@import os@@@",
      "@@@STEP_LOG_LINE@python.inline@print os.environ.get('SWARMING_BOT_ID', '')@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "import os\nprint os.environ.get('SWARMING_TASK_ID', '')\n"
    ],
    "name": "get swarming task id",
    "stdout": "/path/to/tmp/",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@import os@@@",
      "@@@STEP_LOG_LINE@python.inline@print os.environ.get('SWARMING_TASK_ID', '')@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]\\out\\Debug_x64\\dm",
      "--resourcePath",
      "[START_DIR]\\skia\\resources",
      "--skps",
      "[START_DIR]\\skp",
      "--images",
      "[START_DIR]\\skimage\\dm",
      "--colorImages",
      "[START_DIR]\\skimage\\colorspace",
      "--nameByHash",
      "--properties",
      "gitHash",
      "abc123",
      "builder",
      "Test-Win10-Clang-NUC6i5SYK-GPU-IntelIris540-x86_64-Debug-All-Vulkan",
      "buildbucket_build_id",
      "123454321",
      "swarming_bot_id",
      "skia-bot-123",
      "swarming_task_id",
      "123456",
      "--svgs",
      "[START_DIR]\\svg",
      "--key",
      "arch",
      "x86_64",
      "compiler",
      "Clang",
      "configuration",
      "Debug",
      "cpu_or_gpu",
      "GPU",
      "cpu_or_gpu_value",
      "IntelIris540",
      "extra_config",
      "Vulkan",
      "model",
      "NUC6i5SYK",
      "os",
      "Win10",
      "--uninterestingHashesFile",
      "[START_DIR]\\tmp\\uninteresting_hashes.txt",
      "--writePath",
      "[CUSTOM_[SWARM_OUT_DIR]]\\dm",
      "--dont_write",
      "pdf",
      "--randomProcessorTest",
      "--nocpu",
      "--config",
      "vk",
      "--src",
      "tests",
      "gm",
      "image",
      "colorImage",
      "svg",
      "--blacklist",
      "_",
      "svg",
      "_",
      "svgparse_",
      "_",
      "image",
      "gen_platf",
      "pal8os2v2.bmp",
      "_",
      "image",
      "gen_platf",
      "pal8os2v2-16.bmp",
      "_",
      "image",
      "gen_platf",
      "rgba32abf.bmp",
      "_",
      "image",
      "gen_platf",
      "rgb24prof.bmp",
      "_",
      "image",
      "gen_platf",
      "rgb24lprof.bmp",
      "_",
      "image",
      "gen_platf",
      "8bpp-pixeldata-cropped.bmp",
      "_",
      "image",
      "gen_platf",
      "4bpp-pixeldata-cropped.bmp",
      "_",
      "image",
      "gen_platf",
      "32bpp-pixeldata-cropped.bmp",
      "_",
      "image",
      "gen_platf",
      "24bpp-pixeldata-cropped.bmp",
      "_",
      "image",
      "gen_platf",
      "testimgari.jpg",
      "_",
      "image",
      "gen_platf",
      "rle8-height-negative.bmp",
      "_",
      "image",
      "gen_platf",
      "rle4-height-negative.bmp",
      "_",
      "image",
      "_",
      "interlaced1.png",
      "_",
      "image",
      "_",
      "interlaced2.png",
      "_",
      "image",
      "_",
      "interlaced3.png",
      "_",
      "image",
      "_",
      ".arw",
      "_",
      "image",
      "_",
      ".cr2",
      "_",
      "image",
      "_",
      ".dng",
      "_",
      "image",
      "_",
      ".nef",
      "_",
      "image",
      "_",
      ".nrw",
      "_",
      "image",
      "_",
      ".orf",
      "_",
      "image",
      "_",
      ".raf",
      "_",
      "image",
      "_",
      ".rw2",
      "_",
      "image",
      "_",
      ".pef",
      "_",
      "image",
      "_",
      ".srw",
      "_",
      "image",
      "_",
      ".ARW",
      "_",
      "image",
      "_",
      ".CR2",
      "_",
      "image",
      "_",
      ".DNG",
      "_",
      "image",
      "_",
      ".NEF",
      "_",
      "image",
      "_",
      ".NRW",
      "_",
      "image",
      "_",
      ".ORF",
      "_",
      "image",
      "_",
      ".RAF",
      "_",
      "image",
      "_",
      ".RW2",
      "_",
      "image",
      "_",
      ".PEF",
      "_",
      "image",
      "_",
      ".SRW",
      "vk",
      "gm",
      "_",
      "aarectmodes",
      "vk",
      "gm",
      "_",
      "aaxfermodes",
      "vk",
      "gm",
      "_",
      "arithmode",
      "vk",
      "gm",
      "_",
      "composeshader",
      "vk",
      "gm",
      "_",
      "composeshader_alpha",
      "vk",
      "gm",
      "_",
      "composeshader_bitmap",
      "vk",
      "gm",
      "_",
      "composeshader_bitmap2",
      "vk",
      "gm",
      "_",
      "dont_clip_to_layer",
      "vk",
      "gm",
      "_",
      "dftext",
      "vk",
      "gm",
      "_",
      "drawregionmodes",
      "vk",
      "gm",
      "_",
      "filterfastbounds",
      "vk",
      "gm",
      "_",
      "fontcache",
      "vk",
      "gm",
      "_",
      "fontmgr_iter",
      "vk",
      "gm",
      "_",
      "fontmgr_iter_factory",
      "vk",
      "gm",
      "_",
      "fontmgr_match",
      "vk",
      "gm",
      "_",
      "fontscaler",
      "vk",
      "gm",
      "_",
      "fontscalerdistortable",
      "vk",
      "gm",
      "_",
      "gammagradienttext",
      "vk",
      "gm",
      "_",
      "gammatext",
      "vk",
      "gm",
      "_",
      "gradtext",
      "vk",
      "gm",
      "_",
      "hairmodes",
      "vk",
      "gm",
      "_",
      "imagefilters_xfermodes",
      "vk",
      "gm",
      "_",
      "imagefiltersclipped",
      "vk",
      "gm",
      "_",
      "imagefiltersgraph",
      "vk",
      "gm",
      "_",
      "imagefiltersscaled",
      "vk",
      "gm",
      "_",
      "imagefiltersstroked",
      "vk",
      "gm",
      "_",
      "imagefilterstransformed",
      "vk",
      "gm",
      "_",
      "imageresizetiled",
      "vk",
      "gm",
      "_",
      "lcdblendmodes",
      "vk",
      "gm",
      "_",
      "lcdoverlap",
      "vk",
      "gm",
      "_",
      "lcdtext",
      "vk",
      "gm",
      "_",
      "lcdtextsize",
      "vk",
      "gm",
      "_",
      "matriximagefilter",
      "vk",
      "gm",
      "_",
      "mixedtextblobs",
      "vk",
      "gm",
      "_",
      "mixershader",
      "vk",
      "gm",
      "_",
      "pictureimagefilter",
      "vk",
      "gm",
      "_",
      "resizeimagefilter",
      "vk",
      "gm",
      "_",
      "rotate_imagefilter",
      "vk",
      "gm",
      "_",
      "savelayer_lcdtext",
      "vk",
      "gm",
      "_",
      "srcmode",
      "vk",
      "gm",
      "_",
      "surfaceprops",
      "vk",
      "gm",
      "_",
      "textblobgeometrychange",
      "vk",
      "gm",
      "_",
      "textbloblooper",
      "vk",
      "gm",
      "_",
      "textblobmixedsizes",
      "vk",
      "gm",
      "_",
      "textblobmixedsizes_df",
      "vk",
      "gm",
      "_",
      "textblobrandomfont",
      "vk",
      "gm",
      "_",
      "textfilter_color",
      "vk",
      "gm",
      "_",
      "textfilter_image",
      "vk",
      "gm",
      "_",
      "typefacerendering",
      "vk",
      "gm",
      "_",
      "varied_text_clipped_lcd",
      "vk",
      "gm",
      "_",
      "varied_text_ignorable_clip_lcd",
      "vk",
      "gm",
      "_",
      "xfermodeimagefilter",
      "--match",
      "~ApplyGamma",
      "~ComposedImageFilterBounds_Gpu",
      "~DeferredTextureImage",
      "~GrMeshTest",
      "~ImageFilterFailAffectsTransparentBlack_Gpu",
      "~ImageFilterZeroBlurSigma_Gpu",
      "~ImageNewShader_GPU",
      "~NewTextureFromPixmap",
      "~ReadPixels_Gpu",
      "~ReadPixels_Texture",
      "~ReadWriteAlpha",
      "~skbug6653",
      "~SRGBReadWritePixels",
      "~SpecialImage_DeferredGpu",
      "~SpecialImage_Gpu",
      "~WritePixels_Gpu",
      "~WritePixelsNonTexture_Gpu",
      "~XfermodeImageFilterCroppedInput_Gpu",
      "~GrDefaultPathRendererTest",
      "~GrMSAAPathRendererTest",
      "~SkImage_makeNonTextureImage",
      "--nonativeFonts",
      "--verbose"
    ],
    "env": {
      "BUILDTYPE": "Debug_x64",
      "CHROME_HEADLESS": "1",
      "PATH": "<PATH>;RECIPE_PACKAGE_REPO[depot_tools]",
      "SKIA_OUT": "[START_DIR]\\out"
    },
    "name": "dm"
  },
  {
    "name": "$result",
    "recipe_result": null,
    "status_code": 0
  }
]